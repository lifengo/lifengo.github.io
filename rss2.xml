<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Sky_BLOGS</title>
    <link>https://lifengo.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Thu, 26 Mar 2020 02:34:01 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>JavaWeb笔记</title>
      <link>https://lifengo.github.io/2020/03/26/JavaWeb%E7%AC%94%E8%AE%B0/</link>
      <guid>https://lifengo.github.io/2020/03/26/JavaWeb%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Thu, 26 Mar 2020 02:29:38 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;#JavaWeb&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;web前端&lt;ul&gt;
&lt;li&gt;HTML: 负责搭建页面结构和内容            （盖房子 毛坯房）&lt;/li&gt;
&lt;li&gt;CSS: 负责美化页面                        （装修）&lt;/li&gt;
&lt;li&gt;Java
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>#JavaWeb</p><ol><li>web前端<ul><li>HTML: 负责搭建页面结构和内容            （盖房子 毛坯房）</li><li>CSS: 负责美化页面                        （装修）</li><li>JavaScript:负责给页面添加动态效果和动态内容</li><li>JQeury: 是一个js框架，为了简化js开发而生</li></ul></li><li>数据库<h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4></li></ol><ul><li>Hyper Text Mark Language:超文本标记语言，超文本：指不仅仅是纯文本还包括字体的各种设置（大小、颜色、样式等）和多媒体(图片、视频、音频)相关。</li><li>html学习内容：主要学习有哪些标签，标签有哪些属性，标签和标签之间的嵌套关系<h4 id="创建HTML文件"><a href="#创建HTML文件" class="headerlink" title="创建HTML文件"></a>创建HTML文件</h4></li></ul><h4 id="html结构"><a href="#html结构" class="headerlink" title="html结构"></a>html结构</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;!-- 文档声明    告诉浏览器使用html哪个版本的标准解析页面    这是h5标准--&gt;    &lt;html&gt;&lt;!-- 根标签 --&gt;        &lt;head&gt;&lt;!-- 头：里面的内容是给浏览器看的 --&gt;            &lt;meta charset=&quot;UTF-8&quot;&gt;&lt;!-- 告诉浏览器字符集 --&gt;            &lt;!-- 设置页面标题 --&gt;            &lt;title&gt;第一个html页面&lt;/title&gt;        &lt;/head&gt;        &lt;body&gt;&lt;!-- 体：里面的内容是给用户看的 --&gt;        &lt;/body&gt;    &lt;/html&gt;</code></pre><h3 id="body内部常见的标签"><a href="#body内部常见的标签" class="headerlink" title="body内部常见的标签"></a>body内部常见的标签</h3><h4 id="文本标题"><a href="#文本标题" class="headerlink" title="文本标题"></a>文本标题</h4><ul><li>h1-h6</li><li>特点： 独占一行，自带上下外边距</li><li>属性： align=left/right/center<h4 id="段落标签-p"><a href="#段落标签-p" class="headerlink" title="段落标签 p"></a>段落标签 p</h4></li><li>特点： 独占一行，自带上下外边距<h4 id="水平分割线-hr"><a href="#水平分割线-hr" class="headerlink" title="水平分割线 hr"></a>水平分割线 hr</h4><h4 id="换行-br"><a href="#换行-br" class="headerlink" title="换行 br"></a>换行 br</h4><h4 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h4></li></ul><ol><li>无序列表： ul（type）  li</li><li>有序列表： ol(type start reversed)    li</li><li>定义列表： dl  dt  dd  自带层级效果</li><li>列表嵌套： 有序和无序列表可以任意无限嵌套<h4 id="分区标签"><a href="#分区标签" class="headerlink" title="分区标签"></a>分区标签</h4></li></ol><ul><li>作用：用于统一管理多个标签 类似于容器，分区标签自身没有显示效果</li></ul><ol><li>span：行内分区元素，共占一行</li><li>div：块级分区元素，独占一行</li></ol><ul><li>html5标准中新增了几个分区元素  <div>头部</div>  <div>体部</div>  <div>脚部</div>  取代上面的写法 更直观  <header>头部</header>  <article>正文</article>  <footer>脚部</footer>#### 标签(元素)分类</li></ul><ol><li>块级元素：独占一行<br> div，h1-h6，p，hr</li><li>行内元素：共占一行<br> span, 加粗 strong和b，斜体 em和i，删除线del和s，下划线u<h4 id="实体引用（特殊字符）"><a href="#实体引用（特殊字符）" class="headerlink" title="实体引用（特殊字符）"></a>实体引用（特殊字符）</h4></li><li>空格：有折叠问题       &nbsp;   牛逼是屁</li><li>小于号                &lt;    老铁</li><li>大于号                 &gt;    干他<br>html    好他妈老    how to  ml<h4 id="图片标签img"><a href="#图片标签img" class="headerlink" title="图片标签img"></a>图片标签img</h4></li></ol><ul><li>src:路径<ol><li>相对路径：访问站内资源<br> a. 同级目录  直接写图片名<br> b. 上级目录  ../图片名<br> c. 下级目录  文件夹名/图片名</li><li>绝对路径：访问站外资源，好处节省网站资源，坏处可能找不到图片</li></ol></li><li>alt:当图片不能正常显示时显示的文本</li><li>title:当鼠标悬停时显示的文本</li><li>width/height: 宽高，赋值方式：1. 像素 2. 上级元素的百分比 如果只设置宽度 高度会等比例缩放</li><li>支持的图片格式： jpg/jpeg  png(支持透明色)  gif动图</li><li>练习：<br>在页面中添加两张图片，<br>第一张图片显示站内资源的图片(随便找一张)宽度300高度150，<br>鼠标悬停时显示”嘿嘿” ,<br>第二张图片从tmooc里面随便找一张图片<br>宽度body的30% 鼠标悬停时显示”呵呵”<h4 id="图片地图map"><a href="#图片地图map" class="headerlink" title="图片地图map"></a>图片地图map</h4></li><li>map属性：name 代表地图的唯一标识</li><li>子元素： area</li><li>area属性：shape形状(矩形rect、圆形circle)，coords坐标（矩形四个值两个对角线点的坐标，圆形三个值圆心坐标和半径）href:资源路径 页面资源和文件资源（浏览器能浏览则浏览 不能则下载）</li></ul>]]></content:encoded>
      
      <comments>https://lifengo.github.io/2020/03/26/JavaWeb%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>用数组实现环形队列</title>
      <link>https://lifengo.github.io/2020/03/10/%E7%94%A8%E6%95%B0%E7%BB%84%E5%AE%9E%E7%8E%B0%E7%8E%AF%E5%BD%A2%E9%98%9F%E5%88%97/</link>
      <guid>https://lifengo.github.io/2020/03/10/%E7%94%A8%E6%95%B0%E7%BB%84%E5%AE%9E%E7%8E%B0%E7%8E%AF%E5%BD%A2%E9%98%9F%E5%88%97/</guid>
      <pubDate>Mon, 09 Mar 2020 16:16:09 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;通过取模的方式来实现&quot;&gt;&lt;a href=&quot;#通过取模的方式来实现&quot; class=&quot;headerlink&quot; title=&quot;通过取模的方式来实现&quot;&gt;&lt;/a&gt;通过取模的方式来实现&lt;/h2&gt;&lt;p&gt;思路如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;front 指向队列的第一个元素, 也就是说 arr[front] 就是队列的第一个元素&lt;br&gt;front 的初始值 = 0&lt;/li&gt;
&lt;li&gt;rear 指向队列的最后一个元素的后一个位置. 因为希望空出一个空间做为约定.&lt;br&gt;rear 的初始值 = 0&lt;/li&gt;
&lt;li&gt;当队列满时，条件是  (rear  + 1) % maxSize == front 【满】&lt;/li&gt;
&lt;li&gt;对队列为空的条件， rear == front 空&lt;/li&gt;
&lt;li&gt;当我们这样分析， 队列中有效的数据的个数   (rear + maxSize - front) % maxSize &lt;/li&gt;
&lt;li&gt;自行画图便于理解
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="通过取模的方式来实现"><a href="#通过取模的方式来实现" class="headerlink" title="通过取模的方式来实现"></a>通过取模的方式来实现</h2><p>思路如下:</p><ol><li>front 指向队列的第一个元素, 也就是说 arr[front] 就是队列的第一个元素<br>front 的初始值 = 0</li><li>rear 指向队列的最后一个元素的后一个位置. 因为希望空出一个空间做为约定.<br>rear 的初始值 = 0</li><li>当队列满时，条件是  (rear  + 1) % maxSize == front 【满】</li><li>对队列为空的条件， rear == front 空</li><li>当我们这样分析， 队列中有效的数据的个数   (rear + maxSize - front) % maxSize </li><li>自行画图便于理解<a id="more"></a><h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircleQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建一个环形队列</span></span><br><span class="line">        CircleArray queue = <span class="keyword">new</span> CircleArray(<span class="number">4</span>); <span class="comment">//说明设置4, 其队列的有效数据最大是3</span></span><br><span class="line">        <span class="keyword">char</span> key = <span class="string">' '</span>; <span class="comment">// 接收用户输入</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);<span class="comment">//</span></span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">// 输出一个菜单</span></span><br><span class="line">        <span class="keyword">while</span> (loop) &#123;</span><br><span class="line">            System.out.println(<span class="string">"s(show): 显示队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"e(exit): 退出程序"</span>);</span><br><span class="line">            System.out.println(<span class="string">"a(add): 添加数据到队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"g(get): 从队列取出数据"</span>);</span><br><span class="line">            System.out.println(<span class="string">"h(head): 查看队列头的数据"</span>);</span><br><span class="line">            key = scanner.next().charAt(<span class="number">0</span>);<span class="comment">// 接收一个字符</span></span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">                    queue.showQueue();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">                    System.out.println(<span class="string">"输出一个数"</span>);</span><br><span class="line">                    <span class="keyword">int</span> value = scanner.nextInt();</span><br><span class="line">                    queue.addQueue(value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'g'</span>: <span class="comment">// 取出数据</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = queue.getQueue();</span><br><span class="line">                        System.out.printf(<span class="string">"取出的数据是%d\n"</span>, res);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'h'</span>: <span class="comment">// 查看队列头的数据</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = queue.headQueue();</span><br><span class="line">                        System.out.printf(<span class="string">"队列头的数据是%d\n"</span>, res);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'e'</span>: <span class="comment">// 退出</span></span><br><span class="line">                    scanner.close();</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"程序退出~~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CircleArray</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize; <span class="comment">// 表示数组的最大容量</span></span><br><span class="line">    <span class="comment">//front 变量的含义做一个调整： front 就指向队列的第一个元素, 也就是说 arr[front] 就是队列的第一个元素</span></span><br><span class="line">    <span class="comment">//front 的初始值 = 0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> front;</span><br><span class="line">    <span class="comment">//rear 变量的含义做一个调整：rear 指向队列的最后一个元素的后一个位置. 因为希望空出一个空间做为约定.</span></span><br><span class="line">    <span class="comment">//rear 的初始值 = 0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rear; <span class="comment">// 队列尾</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] arr; <span class="comment">// 该数据用于存放数据, 模拟队列</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleArray</span><span class="params">(<span class="keyword">int</span> arrMaxSize)</span> </span>&#123;</span><br><span class="line">        maxSize = arrMaxSize;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断队列是否满</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFull</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (rear  + <span class="number">1</span>) % maxSize == front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断队列是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加数据到队列</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addQueue</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断队列是否满</span></span><br><span class="line">        <span class="keyword">if</span> (isFull()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"队列满，不能加入数据~"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//直接将数据加入</span></span><br><span class="line">        arr[rear] = n;</span><br><span class="line">        <span class="comment">//将 rear 后移, 这里必须考虑取模</span></span><br><span class="line">        rear = (rear + <span class="number">1</span>) % maxSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取队列的数据, 出队列</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断队列是否空</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="comment">// 通过抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列空，不能取数据"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 这里需要分析出 front是指向队列的第一个元素</span></span><br><span class="line">        <span class="comment">// 1. 先把 front 对应的值保留到一个临时变量</span></span><br><span class="line">        <span class="comment">// 2. 将 front 后移, 考虑取模</span></span><br><span class="line">        <span class="comment">// 3. 将临时保存的变量返回</span></span><br><span class="line">        <span class="keyword">int</span> value = arr[front];</span><br><span class="line">        front = (front + <span class="number">1</span>) % maxSize;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示队列的所有数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 遍历</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"队列空的，没有数据~~"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 思路：从front开始遍历，遍历多少个元素</span></span><br><span class="line">        <span class="comment">// 动脑筋</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = front; i &lt; front + size() ; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"arr[%d]=%d\n"</span>, i % maxSize, arr[i % maxSize]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求出当前队列有效数据的个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// rear = 2</span></span><br><span class="line">        <span class="comment">// front = 1</span></span><br><span class="line">        <span class="comment">// maxSize = 3</span></span><br><span class="line">        <span class="keyword">return</span> (rear + maxSize - front) % maxSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示队列的头数据， 注意不是取出数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">headQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列空的，没有数据~~"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr[front];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://lifengo.github.io/2020/03/10/%E7%94%A8%E6%95%B0%E7%BB%84%E5%AE%9E%E7%8E%B0%E7%8E%AF%E5%BD%A2%E9%98%9F%E5%88%97/#disqus_thread</comments>
    </item>
    
    <item>
      <title>稀疏数组基本实现</title>
      <link>https://lifengo.github.io/2020/03/09/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/</link>
      <guid>https://lifengo.github.io/2020/03/09/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/</guid>
      <pubDate>Mon, 09 Mar 2020 10:00:51 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;基本介绍&quot;&gt;&lt;a href=&quot;#基本介绍&quot; class=&quot;headerlink&quot; title=&quot;基本介绍&quot;&gt;&lt;/a&gt;&lt;strong&gt;基本介绍&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;当一个数组中大部分元素为０，或者为同一个值的数组时，可以使用稀疏数组来保存该数组。&lt;/p&gt;
&lt;h2 id=&quot;稀疏数组的处理方法是&quot;&gt;&lt;a href=&quot;#稀疏数组的处理方法是&quot; class=&quot;headerlink&quot; title=&quot;稀疏数组的处理方法是:&quot;&gt;&lt;/a&gt;&lt;strong&gt;稀疏数组的处理方法是:&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;记录数组一共有几行几列，有多少个不同的值&lt;/li&gt;
&lt;li&gt;把具有不同值的元素的行列及值记录在一个小规模的数组中，从而缩小程序的规模&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a><strong>基本介绍</strong></h2><p>当一个数组中大部分元素为０，或者为同一个值的数组时，可以使用稀疏数组来保存该数组。</p><h2 id="稀疏数组的处理方法是"><a href="#稀疏数组的处理方法是" class="headerlink" title="稀疏数组的处理方法是:"></a><strong>稀疏数组的处理方法是:</strong></h2><ul><li>记录数组一共有几行几列，有多少个不同的值</li><li>把具有不同值的元素的行列及值记录在一个小规模的数组中，从而缩小程序的规模</li></ul><a id="more"></a><p><strong>应用实例</strong></p><p>使用稀疏数组，来保留类似前面的二维数组(棋盘、地图等等)，把稀疏数组存盘，并且可以从新恢复原来的二维数组数。<br>整体思路分析<br><img src="https://img-blog.csdnimg.cn/20200302120628230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjI5MTQ1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>==扩展==：在前面的基础上，将稀疏数组保存到磁盘上，比如 map.data。恢复原来的数组时，读取map.data 进行恢复</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sparseArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.RandomAccessFile;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span> 2020/3/1 0001</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SparseArray</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        array[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>; <span class="comment">//1代表黑子</span></span><br><span class="line">        array[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>; <span class="comment">//2代表白子</span></span><br><span class="line">        <span class="comment">//打印数组</span></span><br><span class="line">        System.out.println(<span class="string">"**********原数组***********"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row :</span><br><span class="line">                array) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data :</span><br><span class="line">                    row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历非零个数</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        创建对应的稀疏数组并赋值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span>[][] sparseArray = <span class="keyword">new</span> <span class="keyword">int</span>[sum + <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        遍历二维数组，将非零的值存放到sparseArray中</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>; <span class="comment">//记录第几个非零数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    sparseArray[count][<span class="number">0</span>] = i;</span><br><span class="line">                    sparseArray[count][<span class="number">1</span>] = j;</span><br><span class="line">                    sparseArray[count][<span class="number">2</span>] = array[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  1. 先读取稀疏数组的第一行，根据第一行的数据，创建原始的二维数组，比如上面的  chessArr2 = int [11][11]</span></span><br><span class="line"><span class="comment">2. 在读取稀疏数组后几行的数据，并赋给 原始的二维数组 即可.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">        <span class="comment">//将稀疏数组转换成初始数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] array1 = <span class="keyword">new</span> <span class="keyword">int</span>[sparseArray[<span class="number">0</span>][<span class="number">0</span>]][sparseArray[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">            array1[sparseArray[i][<span class="number">0</span>]][sparseArray[i][<span class="number">1</span>]] = sparseArray[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"***********恢复后的数组*************"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row :</span><br><span class="line">                array1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data :</span><br><span class="line">                    row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将稀疏数组写入map.dat</span></span><br><span class="line">        writeSpareArr(sparseArray);</span><br><span class="line">        <span class="comment">//读map.dat并还原二维数组</span></span><br><span class="line">        readSparseArr(sparseArray);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将稀疏数组遍历并存入map.dat中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sparseArray</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeSpareArr</span><span class="params">(<span class="keyword">int</span>[][] sparseArray)</span></span>&#123;</span><br><span class="line">        String a = <span class="keyword">null</span>;</span><br><span class="line">        String b = <span class="keyword">null</span>;</span><br><span class="line">        String c = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//遍历稀疏数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">            <span class="comment">//打印稀疏数组</span></span><br><span class="line">            System.out.printf(<span class="string">"%d\t%d\t%d\t"</span>, sparseArray[i][<span class="number">0</span>], sparseArray[i][<span class="number">1</span>], sparseArray[i][<span class="number">2</span>]);</span><br><span class="line">            <span class="keyword">try</span> (RandomAccessFile raf = <span class="keyword">new</span> RandomAccessFile(<span class="string">"map.dat"</span>, <span class="string">"rw"</span>)) &#123;</span><br><span class="line">                raf.seek(i * <span class="number">60</span>); <span class="comment">//将指针移动到每一行开始位置</span></span><br><span class="line">                <span class="comment">//将数组Int类型转换成字符串类型</span></span><br><span class="line">                a = sparseArray[i][<span class="number">0</span>] + <span class="string">""</span>;</span><br><span class="line">                b = sparseArray[i][<span class="number">1</span>] + <span class="string">""</span>;</span><br><span class="line">                c = sparseArray[i][<span class="number">2</span>] + <span class="string">""</span>;</span><br><span class="line">                <span class="comment">//将字符串以UTF-8转换成字节，一个数占20个字节，便于后面取</span></span><br><span class="line">                <span class="keyword">byte</span>[] data = a.getBytes(<span class="string">"utf-8"</span>);</span><br><span class="line">                data = Arrays.copyOf(data, <span class="number">20</span>);</span><br><span class="line">                raf.write(data);</span><br><span class="line">                data = b.getBytes(<span class="string">"utf-8"</span>);</span><br><span class="line">                data = Arrays.copyOf(data, <span class="number">20</span>);</span><br><span class="line">                raf.write(data);</span><br><span class="line">                data = c.getBytes(<span class="string">"utf-8"</span>);</span><br><span class="line">                data = Arrays.copyOf(data, <span class="number">20</span>);</span><br><span class="line">                raf.write(data);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从map中读取稀疏数组并还原 初始二维数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sparseArray</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readSparseArr</span><span class="params">(<span class="keyword">int</span>[][] sparseArray)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] sparseArray1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>][]; <span class="comment">//初始化数组</span></span><br><span class="line">        <span class="keyword">try</span> (FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"map.dat"</span>)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">                <span class="comment">//读行</span></span><br><span class="line">                <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">20</span>];</span><br><span class="line">                fis.read(data);</span><br><span class="line">                <span class="keyword">int</span> row = Integer.parseInt(<span class="keyword">new</span> String(data, <span class="string">"utf-8"</span>).trim());</span><br><span class="line">                <span class="comment">//读列数</span></span><br><span class="line">                data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">20</span>];</span><br><span class="line">                fis.read(data);</span><br><span class="line">                <span class="keyword">int</span> col = Integer.parseInt(<span class="keyword">new</span> String(data, <span class="string">"utf-8"</span>).trim());</span><br><span class="line">                <span class="comment">//读值</span></span><br><span class="line">                data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">20</span>];</span><br><span class="line">                fis.read(data);</span><br><span class="line">                <span class="keyword">int</span> val = Integer.parseInt(<span class="keyword">new</span> String(data, <span class="string">"utf-8"</span>).trim());</span><br><span class="line">                <span class="comment">//因为第一行是数组行数、列数和非零个数，所以单独分支</span></span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                    sparseArray1 = <span class="keyword">new</span> <span class="keyword">int</span>[row][col];</span><br><span class="line">                    System.out.print(<span class="string">"棋子个数: "</span> + val);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                    从第二行开始，将列数，行数，值分别赋给二维数组</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    sparseArray1[row][col] = val;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">            System.out.println(<span class="string">"**********读取文件的原数组**********"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span>[] row :</span><br><span class="line">                    sparseArray1) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> data :</span><br><span class="line">                        row) &#123;</span><br><span class="line">                    System.out.printf(<span class="string">"%d\t"</span>, data);</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://lifengo.github.io/2020/03/09/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://lifengo.github.io/2020/03/09/hello-world/</link>
      <guid>https://lifengo.github.io/2020/03/09/hello-world/</guid>
      <pubDate>Mon, 09 Mar 2020 04:34:10 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="欢迎访问我的博客！！"><a href="#欢迎访问我的博客！！" class="headerlink" title="欢迎访问我的博客！！"></a>欢迎访问我的博客！！</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      <comments>https://lifengo.github.io/2020/03/09/hello-world/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
