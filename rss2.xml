<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Sky_BLOGS</title>
    <link>https://lifengo.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Thu, 02 Apr 2020 12:40:45 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>实现WebServer服务器流程</title>
      <link>https://lifengo.github.io/2020/04/02/%E5%AE%9E%E7%8E%B0WebServer%E6%B5%81%E7%A8%8B/</link>
      <guid>https://lifengo.github.io/2020/04/02/%E5%AE%9E%E7%8E%B0WebServer%E6%B5%81%E7%A8%8B/</guid>
      <pubDate>Thu, 02 Apr 2020 11:17:31 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;WebServer-v1&quot;&gt;&lt;a href=&quot;#WebServer-v1&quot; class=&quot;headerlink&quot; title=&quot;WebServer_v1&quot;&gt;&lt;/a&gt;WebServer_v1&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTTP协议:超文本传输协议&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器与服务端之间传输数据的协议，底层的传输协议为TCP。&lt;br&gt;HTTP则为应用层协议，负责定义传输数据的格式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTTP协议分为1.0与1.1两个版本。现在常用为1.1版本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;协议规定客户端与服务端通讯方式为:一次请求一次响应&lt;br&gt;即:客户端发起请求，服务端接收到请求后向客户端发送响应。&lt;br&gt;服务端不会主动发送内容给客户端。采取”一问一答”的形式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTTP对请求与响应分别定义了格式。并且，无论是请求还是&lt;br&gt;响应中发送的字符(不含正文部分内容)都只能符合ISO8859-1&lt;br&gt;编码字符(如:数字，字母，符号)。像中文等其他字符都需要&lt;br&gt;经过处理后才可以发送。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTTP请求格式&lt;br&gt;一个HTTP请求分为三部分组成:请求行，消息头，消息正文&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="WebServer-v1"><a href="#WebServer-v1" class="headerlink" title="WebServer_v1"></a>WebServer_v1</h3><ul><li><p>HTTP协议:超文本传输协议</p></li><li><p>浏览器与服务端之间传输数据的协议，底层的传输协议为TCP。<br>HTTP则为应用层协议，负责定义传输数据的格式。</p></li><li><p>HTTP协议分为1.0与1.1两个版本。现在常用为1.1版本。</p></li><li><p>协议规定客户端与服务端通讯方式为:一次请求一次响应<br>即:客户端发起请求，服务端接收到请求后向客户端发送响应。<br>服务端不会主动发送内容给客户端。采取”一问一答”的形式。</p></li><li><p>HTTP对请求与响应分别定义了格式。并且，无论是请求还是<br>响应中发送的字符(不含正文部分内容)都只能符合ISO8859-1<br>编码字符(如:数字，字母，符号)。像中文等其他字符都需要<br>经过处理后才可以发送。</p></li><li><p>HTTP请求格式<br>一个HTTP请求分为三部分组成:请求行，消息头，消息正文</p><a id="more"></a></li></ul><ol><li>请求行<br>请求行分为三部分:<br>请求方法 资源路径 协议(CRLF)<br>method url protocol(CRLF)<br>例如:<br>GET /index.html HTTP/1.1(CRLF)<br>请求行以CRLF结束<br>CR:回车符,asc编码中对应数字13<br>LF:换行符,asc编码中对应数字10</li></ol><ol start="2"><li>消息头</li></ol><ul><li><p>消息头由若干行表示，每行表示一个具体的头信息每个头信息格式分为两部分:<br>消息头名字:消息头的值(CRLF)<br>name:value(CRLF)<br>每个消息头都以CRLF结尾。</p></li><li><p>最后一个消息头结尾处会有两个CRLF，第一个表示最后一个消息头结束，第二个表示消息头部分结束。<br>例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Host: localhost:8080(CRLF)</span><br><span class="line">Connection: keep-alive(CRLF)</span><br><span class="line">Cache-Control: max-age&#x3D;0(CRLF)</span><br><span class="line">Upgrade-Insecure-Requests: 1(CRLF)</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;51.0.2704.106 Safari&#x2F;537.36(CRLF)</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8(CRLF)</span><br><span class="line">Accept-Encoding: gzip, deflate, sdch(CRLF)</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8(CRLF)(CRLF)</span><br></pre></td></tr></table></figure><h4 id="创建客户端与服务端"><a href="#创建客户端与服务端" class="headerlink" title="创建客户端与服务端"></a>创建客户端与服务端</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.webserver.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * WebServer主类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebServer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> ServerSocket server;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WebServer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"正在启动服务器。。。"</span>);</span><br><span class="line">            server = <span class="keyword">new</span> ServerSocket(<span class="number">8080</span>);</span><br><span class="line">            System.out.println(<span class="string">"服务器已启动！"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"等待客户端连接。。。"</span>);</span><br><span class="line">            Socket socket = server.accept();</span><br><span class="line">            System.out.println(<span class="string">"一个客户端连接了！"</span>);</span><br><span class="line">            ClientHandler c1 = <span class="keyword">new</span> ClientHandler(socket);</span><br><span class="line">            Thread t1 = <span class="keyword">new</span> Thread(c1);</span><br><span class="line">            t1.start();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        WebServer server = <span class="keyword">new</span> WebServer();</span><br><span class="line">        server.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.webserver.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 客户端处理器，负责处理与客户端的交互工作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientHandler</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Socket socket;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ClientHandler</span><span class="params">(Socket socket)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.socket = socket;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream input = socket.getInputStream();</span><br><span class="line">            <span class="keyword">int</span> d = -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> ((d = input.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print((<span class="keyword">char</span>)d);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            处理完请求并响应客户端后与其断开连接</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                socket.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WebServer-v2"><a href="#WebServer-v2" class="headerlink" title="WebServer_v2"></a>WebServer_v2</h3><p>本版本开始的工作重点为解析请求</p><ul><li>WebServer的工作流程大体分为三步：</li></ul><ol><li>解析请求</li><li>处理请求</li><li>发送响应</li></ol><ul><li><p>通过以上三步将浏览器的请求处理完毕并予以响应，使其能看到处理结果</p></li><li><p>实现功能：<br>在ClientHandler中读取客户端发送过来的一行字符串，一行字符串的结束标志<br>为连续读取的两个字符分别是CR，LF<br>即：回车符和换行符</p></li><li><p>因为请求行与消息头共同点都是一行一行的字符串进行 发送的</p></li></ul><h3 id="WebServer-v3"><a href="#WebServer-v3" class="headerlink" title="WebServer_v3"></a>WebServer_v3</h3><p>本版本开始的工作重点为解析请求</p><ul><li><p>由于一个请求包含三部分：请求行，消息头，消息正文<br>而我们后期处理请求者三部分信息都要获取，因此我们开始整理请求<br>设计一个类，HTTPRequest，响应对象。使用这个类的每一个实例表示客户端发送过来的一个具体请求内容。</p></li><li><p>在HttpRequest中设计若干属性，分别对应请求中各部分内容以便后期通过请求对象获取</p></li><li><p>在请求对象实例化时进行解析<br>实现：<br>1、创建一个包：com.webserver.http<br>2、在http包中定义类：HTTPRequest请求对象，并设计对应的属性<br>3、定义构造方法，在构造方法中完成请求的解析工作以初始化请求对象</p></li></ul><h3 id="WebServer-v4"><a href="#WebServer-v4" class="headerlink" title="WebServer_v4"></a>WebServer_v4</h3><p>本版本开始的工作：</p><ul><li><p>在项目目录下面新建一个目录webapps，在里面创建一个网络应用（webapp）<br>每一个网络应用会包含：网页，静态资源（图片等素材），业务逻辑（java程序，处理<br>当前网络应用提供给用户的功能）等</p></li><li><p>WebServer作为一个网络容器，可以同时管理多个网络应用，并通过http协议与客户端交互，<br>允许客户端通过url指定想访问的网络应用</p></li><li><p>实现；<br>1、在项目目录下新建目录webapps<br>2、在webapps下新建第一个网络应用目录：myweb<br>3、在myweb目录下新建一个页面index.html</p></li><li><p>实现WebServer处理请求的工作，这里ClientHandler要根据请求中用户指定的抽象路径去webapps下寻找<br>对应资源，并打桩输出结果</p></li><li><p>例如：用户在浏览器输入了地址：<code>http://localhost:8080/myweb/index.html</code><br>那么我们之前解析请求后，抽象路径部分就是 /myweb/index.html<br>我们就对应的从webapps目录下寻找该资源<br>./webapps/myweb/index.html</p></li></ul><h3 id="WebServer-v5"><a href="#WebServer-v5" class="headerlink" title="WebServer_v5"></a>WebServer_v5</h3><p>本版本开始的工作：<br>发送响应给客户端。上个版本中我们根据请求找到了资源，因此，本版本我们要将<br>客户端请求的资源响应给客户端。</p><ul><li>Http协议对响应的格式有规定。响应：Response，是指服务端发送给客户端的内容。</li></ul><h3 id="WebServer-v6"><a href="#WebServer-v6" class="headerlink" title="WebServer_v6"></a>WebServer_v6</h3><p>本版本开始的工作：</p><ul><li>重构代码，设计一个响应对象HttpResponse，将响应工作移动到这个里面。将来</li><li>响应内容中会变化的地方我们设计为属性。<br>然后不ClientHandler在处理请求时，将需要响应的内容设置到 响应对象中即可。</li><li>具体的响应工作由HTTPResponse完成。</li></ul><h3 id="WebServer-v7"><a href="#WebServer-v7" class="headerlink" title="WebServer_v7"></a>WebServer_v7</h3><p>本版本开始的工作：</p><ul><li>完成响应404页面的工作。ClientHandler在处理请求时，若发现客户端请求的资源不存在时，应当响应404页面通知客户端请求资源不存在的问题。这里发送的状态代码应当也是404,因此，我们需要对HTTPResponse进行改动，添加两个新的属性分别是状态代码与状态描述。然后在发送状态行操作中根据这两个属性值发送状态代码内容，从而ClientHandler可以根据不同情况设置并进行响应</li></ul><p>实现</p><ol><li>在HttpResponse中定义两个属性<br> int statusCode 状态代码，默认值200<br> String statusReason 状态描述，默认值“ok”<br> 因为实际应用中，响应200是最多的操作，因此默认值为200可以在正常响应时不用设置这两项，只有特别的情况才需要额外设置</li><li>为两个属性添加get，set方法</li><li>修改发送状态行的方法，发送这两个属性的值。</li><li>在webapps目录下新建子目录root，并将404.html页面定义在这里，因为不管哪个网络应用，客户端请求其中资源时都可能出现资源不存在的情况，因此响应的404页面应当是独立于这些网络应用的。对此我们单独定义一个root目录存放公用的资源。</li><li>在ClientHandler处理请求的分支中，修改资源不存在时操作的分支<br>设置response状态代码为404和描述“NOT FOUND”<br>设置响应正文文件为 404页面，然后响应客户端即可</li></ol><h3 id="WebServer-v8"><a href="#WebServer-v8" class="headerlink" title="WebServer_v8"></a>WebServer_v8</h3><p>本版本开始的工作：</p><ul><li><p>在index.html页面中添加了一张图片后发现，浏览器在请求页面后，服务端将页面响应完毕时浏览器解释HTML代码进行展现的过程中若发现该页面需要其他<br>资源（图片，样式，脚本）时会再次发起请求向服务器获取该资源。因此，构成一个页面的完成过程需要多次请求与响应才可以完成</p></li><li><p>从doc.canglaoshi.cn网站将学子商城项目导入到WebServer中，并请求其首页index.html暴露出一个问题，无法正确的展现页面内容究其原因是客户单请求的资源无论是什么类型的文件，我们在响应时发送响应头：Content-Type时指定的值是写死的，内容为“text/html”，而这个值是告诉浏览器其请求的资源时“页面”因此浏览器无法正确理解其请求的资源从而无法根据该资源正确展现页面。</p></li><li><p>使用该版本我们来重构HTTPResponse中发送响应头的操作分为以下几部：</p></li></ul><ol><li>先将发送响应头由原有的固定发送两个头改为可以进行设置的，按照实际需求进发送</li><li>由于Content—Type与Content-Length是说明响应正文的类型和长度的，因此<br>只要当前响应设置了响应正文就一定会包含着两个头。<br>那么我们可以将设置这两个头的操作放在设置响应正文的方法：setEntity中，这样外界只要设置了正文的文件，我们就可以根据该文件添加两个头，没有必要外界每次每次设置完响应正文还要再单独设置两个头，减少麻烦的操作。</li></ol><h3 id="WebServer-v9"><a href="#WebServer-v9" class="headerlink" title="WebServer_v9"></a>WebServer_v9</h3><p>本版本开始的工作：</p><ul><li>接着对V8版本需求操作<br>在上个版本中我们已经设置响应头Content-Type的工作挪到HTTPResponse的<br>setEntity方法中了。但是设置的内容仍然是写死的“text/html”，本版本中<br>我们要根据实际设置的正文文件类型来对应设置Content-Type的值。使得我们可以正确响应给客户端请求的资源并说明正确的类型由于不同的文件类型有对应的Content-Type的值，大约1000多种。并且都有相关规定，可以参阅W3C官网。<br>因此我们设计一个类：HttpContext，将所有HTTP规定的内容全部放在这里定义</li></ul><p>实现：</p><ol><li>在com.webserver.http包中定义一个类：HTTPContext</li><li>在HttpContent中定义一个静态属性：Map mime_mapping<br> 这个Map用来保存所有资源类型与Context-type对应的值其中Key保存<br> 资源的后缀名，如（HTML，css，js）<br> value保存对应的Context-type值（text/html,text/css）并完成初始化</li><li>在HTTPContext中定义一个公用的静态方法：getMimeType可以根据资源的<br> 后缀名获取对应的Context-Type的值</li><li>在HttpResponse的setEntity方法中修改逻辑，根据设置的正文文件获取其<br> 名称，然后得到后缀名，在通过HTTPContext的getMimeType获取到<br> Context-Type的值并设置到响应头中。</li></ol><p>经过上述操作后，再次请求学子商城的页面时就能看到正确的显示效果了。</p><h3 id="WebServer-v10"><a href="#WebServer-v10" class="headerlink" title="WebServer_v10"></a>WebServer_v10</h3><p>本版本开始的工作：</p><ul><li><p>解决空请求带来的下标越界问题</p></li><li><p>HTTP协议允许客户端发送空请求，正常情况下客户端发送的是一个请求内容。因此我们在处理客户端操作时第一步就是解析请求，而我们解析请求第一件事就是解析请求行。</p></li><li><p>但是若客户端发送的是空请求，那么我们在读取请求行时实际得到的是一个空字符串，没有办法按照空格拆分为三部分，因此这时获取请求行内容就会下标越界。</p></li></ul><p>对于空请求，我们处理办法应当是直接忽略本次请求处理。</p><p>解决办法：</p><ul><li>当HTTPRequest实例化时（解析请求的过程）若遇到了空请求那么就直接对外抛出一个空请求异常（自定义一个异常），这样将异常抛给ClientHandler，当ClientHandler实例化HTTPRequest抛出该异常则会忽略后续所有步骤。</li></ul><h3 id="WebServer-v11"><a href="#WebServer-v11" class="headerlink" title="WebServer_v11"></a>WebServer_v11</h3><p>本版本开始的工作：</p><ul><li><p>使当前webServer支持所有的资源类型所对应的Content-Type</p></li><li><p>Tomcat是一个开源的免费的web容器，也是将来使用最广泛的，它已经将所有的类型都整理了处理并保存在其安装路径下的conf目录中，名为web.xml文件</p></li><li><p>我们要做的工作就是解析这个web.xml文件，将所有的类型得到并用啦初始化<br>HttpContext中的Map：mime_mapping。</p></li></ul><h3 id="WebServer-v12"><a href="#WebServer-v12" class="headerlink" title="WebServer_v12"></a>WebServer_v12</h3><p>本版本开始的工作：</p><ul><li><p>处理业务操作：用户注册，登录</p></li><li><p>完成用户注册功能<br>注册流程为：<br>1、用户访问用户注册页面<br>2、在注册页面上输入用信息<br>3、点击注册按钮，将数据提交给服务端<br>4、服务端通过request得到用户提交的数据并保存<br>5、响应客户端注册结果页面</p></li><li><p>在本版本中的知识点：<br>1、表单的应用form<br>2、get方式的提交规则<br>3、解析请求时，针对get请求提交数据的解析</p></li></ul><p>实现</p><ol><li><p>在webapps/myweb下新建注册用户页面：reg.html在其中定义表单，并且制定提交路径为“./reg”</p></li><li><p>本环节重点：<br> 在解析请求时，如果是表单用get形式提交数据，那么数据会被拼接到URL中，<br> 这是请求行抽象路径就能看到格式如下：<br> /myweb/reb?username=XXXX&amp;password=XXX&amp;…<br> 因此我们针对这种传参的请求，要将参数也解析出来并保存到请求对象中<br> 方便处理业务时获取这些参数内容。<br> 这个操作只需要开发一次，将来处理其他业务时也可以直接从请求对象中获取参数了</p></li><li><p>在ClientHandler处理请求的环节中添加一个新的分支判断抽象路径的值<br> 是否为“、myweb/reg”，若是则打桩备用<br> 若不是则走原来的处理业务操作（判断是否为请求资源文件）</p><ul><li><p>这里存在两个问题，原来处理请求时genuineURL作为抽象路径使用，<br>但是由于现在该抽象路径可能含有参数了，因此不适用了，要改为根据requestURI的值判定了</p></li><li><p>第二个问题，当走到处理业务的分支中，由于现在仅打桩，没有做实质操作，会导致response对象中的响应正文实体文件entity没有设置，但此时ClientHandler在处理第三个环节响应客户端时，HTTPResponse发送正文会读取entity指定的文件，因此会出现空指针。所以在这里要添加一个判断，只有entity不为null才作为正文内容发送。</p></li></ul></li></ol><h3 id="WebServer-v13"><a href="#WebServer-v13" class="headerlink" title="WebServer_v13"></a>WebServer_v13</h3><p>本版本开始的工作：</p><ul><li>完成用户注册业务处理<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.webserver.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.webserver.http.HTTPResponse;</span><br><span class="line"><span class="keyword">import</span> com.webserver.http.HttpRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.RandomAccessFile;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理用户注册业务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpRequest request, HTTPResponse response)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"RegServlet: 开始处理注册。。。"</span>);</span><br><span class="line">        <span class="comment">//1、通过request获取用户的注册信息</span></span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        System.out.println(<span class="string">"username: "</span> + username);</span><br><span class="line">        System.out.println(<span class="string">"password: "</span> + password);</span><br><span class="line">        <span class="comment">//2、将注册信息写入文件user.dat</span></span><br><span class="line">        <span class="keyword">try</span> (RandomAccessFile raf = <span class="keyword">new</span> RandomAccessFile(<span class="string">"./WebServer_v13/src/user.dat"</span>, <span class="string">"rw"</span>)) &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            首先判断user.dat文件中是否已经存在该用户，若存在则响应用户注册提示页面，</span></span><br><span class="line"><span class="comment">            提示该用户已存在，否则将该用户信息写入user.dat文件</span></span><br><span class="line"><span class="comment">            注册提示页面：reg_have_user.html</span></span><br><span class="line"><span class="comment">            提示显示一行文字：该用户已存在，请重新填写用户名！</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; raf.length() / <span class="number">64</span>; i++) &#123;</span><br><span class="line">                raf.seek(i * <span class="number">64</span>);</span><br><span class="line">                <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">32</span>];</span><br><span class="line">                raf.read(data);</span><br><span class="line">                String str = <span class="keyword">new</span> String(data,<span class="string">"utf-8"</span>).trim();</span><br><span class="line">                <span class="keyword">if</span> (username.equals(str)) &#123;</span><br><span class="line">                    <span class="comment">//用户已存在</span></span><br><span class="line">                    File file = <span class="keyword">new</span> File(<span class="string">"./WebServer_v13/webapps/myweb/reg_have_user.html"</span>);</span><br><span class="line">                    response.setEntity(file);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            raf.seek(raf.length()); <span class="comment">//指针指向文件末尾</span></span><br><span class="line">            <span class="keyword">byte</span>[] data = username.getBytes(<span class="string">"utf-8"</span>);</span><br><span class="line">            System.out.println(data.length);</span><br><span class="line">            data = Arrays.copyOf(data, <span class="number">32</span>);</span><br><span class="line">            raf.write(data);</span><br><span class="line">            data = password.getBytes(<span class="string">"utf-8"</span>);</span><br><span class="line">            data = Arrays.copyOf(data, <span class="number">32</span>);</span><br><span class="line">            raf.write(data);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//注册完毕，响应注册成功页面给客户端</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3、设置response响应客户端注册结果</span></span><br><span class="line">        File successPage = <span class="keyword">new</span> File(<span class="string">"./WebServer_v13/webapps/myweb/reg_success.html"</span>);</span><br><span class="line">        response.setEntity(successPage);</span><br><span class="line">        System.out.println(<span class="string">"RegServlet：处理注册完毕！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="WebServer-v14"><a href="#WebServer-v14" class="headerlink" title="WebServer_v14"></a>WebServer_v14</h3><p>本版本开始的工作：</p><ul><li>解决传递中文问题</li></ul><ol><li><p>如果页面上form表单提交用户输入的内容时使用get形式提交，那么表单数据会被拼接到URL中进行传递，这是传递的数据在请求中出现在请求行的抽象路径部分。</p></li><li><p>HTTP协议要求这部分的文本内容只能符合ISO8859-1字符集，而这个字符集不能出现中文，因此对于这种情况，浏览器的通常做法是现将中文按照UTF-8转为一组字节，在将每个字节的二进制内容以“%XX”表示，这里的xx是两位16进制的字符表示形式。（16进制的字符为数字和字母，ISO8859-1支持）</p></li><li><p>因此服务器在接受这样的内容要现将XX部分的两位16进制转化为2进制，然后再将这些字节按照UTF-8还原为中文</p></li><li><p>浏览器传递中文的流程：传递中文“范”为例</p><ul><li>将“范”按照UTF-8转为三个字节<br>对应的2进制是<br>11101000,10001100,10000011</li><li>将这三个字节分别用16进制表示<br>E8，8C，83</li><li>拼接在URL中，每两位16进制（一字节）前面都会加上符号“%”<br>%E8%8C%83</li></ul></li></ol><p>服务端做一次反向操作即可还原中文,URLDecoder已经实现了该功能。</p><h3 id="WebServer-v15"><a href="#WebServer-v15" class="headerlink" title="WebServer_v15"></a>WebServer_v15</h3><p>本版本开始的工作：</p><ul><li><p>完成用户登录功能</p></li><li><p>登录流程：<br>1、用户请求登录页面login.html<br>2、在页面中输入用户名及密码，然后点击登录按钮<br>3、form表单将登录信息提交路径：“./login”<br>4、ClientHandler在处理请求的环节添加一个新的分支，若请求路径的值为”/myweb/login”，则实例化登录业务处理类：LoginServlet，并调用其service方法<br>5、LoginServlet的service方法处理登录工作</p><ul><li>5.1：request获取用户输入的登录信息（用户名，密码）</li></ul><p>  5.2：读取user.data文件对比是否有一条记录的用户名与密码与其一致<br>  若一致，则设置response对象响应登录成功的页面login_success.html<br>  若用户名一致，但密码错误，或没有此用户，都设置response对象响应<br>  登录失败页面login_fail.html<br>  登录成功页面上显示：登录成功，欢迎回来！<br>  登录失败页面上显示：登录失败，用户名或密码不正确</p></li><li><p>扩展：修改密码业务<br>  ClientHandler在处理请求的环节添加一个新的分支，若请求路径的值为<br>  “/myweb/change_pw”，则实例化登录业务处理类：ChangeServlet，并调用其service方法</p><ol><li>request获取用户信息（用户名，密码，新密码。。。）</li><li>读取user.data文件，将用户名和密码与文件中的用户名密码进行对比<br> 2.1 如果用户名不对 或者 密码不对 则返回 用户名或密码错误<br> 2.2 如果符合 则下一步 进行修改密码操作 ：<ol><li>最后一次输入的密码与上一次密码进行对比 如果不同返回 两次密码输入的不一致 的页面</li><li>否则 将指针移动到当前用户名 对应的 密码位置，随后将新密码写入文件中</li></ol></li></ol></li></ul><h3 id="WebServer-v16"><a href="#WebServer-v16" class="headerlink" title="WebServer_v16"></a>WebServer_v16</h3><p>本版本开始的工作：</p><ul><li><p>重构项目，在servlet包中定义类：HTTPServlet，这个类作为所有Servlet的超类使用。将共有代码放在这里，约束所有Servlet处理业务方法service</p></li><li><p>支持POST请求<br>用户在页面表单输入的内容如果包含隐私信息，或者存在上传附件的操作时，表单提交形式应当为POST请求。而POST请求会将用户提交的数据包含在请求的消息正文中，因此我们应当在HTTPRequest中完成对POST请求的解析工作。</p></li></ul><h3 id="WebServer-v17"><a href="#WebServer-v17" class="headerlink" title="WebServer_v17"></a>WebServer_v17</h3><p>本版本开始的工作：</p><ul><li><p>使用Thymeleaf，完成动态页面。</p></li><li><p>本版本我们将实现现有的所有注册用户展现一个页面中给用户看。<br>这需要将user.dat文件中所有用户数据读取出来并利用一个已经写好的HTML页面展现，利用Thymeleaf将动态数据绑定到静态页面后将页面发送给用户。</p></li></ul><h3 id="WebServer-v18"><a href="#WebServer-v18" class="headerlink" title="WebServer_v18"></a>WebServer_v18</h3><p>本版本开始的工作：</p><ul><li><p>之前的WebServer存在一个弊端，就是每当添加一个新的业务处理类（某 Servlet），就要修改ClientHandler，在处理请求的环节添加一个新的分支，判断新的请求然后实例化这个Servlet调用其service方法这样会导致处理业务与ClientHandler的流程控制由一个必然的耦合关系。</p></li><li><p>利用反射，我们要达到ClientHandler不再关心具体哪个请求对应哪个Servlet，而是在配置文件（servlet.xml）中配置对应关系，ClientHandler根据配置信息处理。<br>这样将来无论添加什么新的业务，ClientHandler都不用再进行修改。</p></li></ul><h3 id="WebServer-v19"><a href="#WebServer-v19" class="headerlink" title="WebServer_v19"></a>WebServer_v19</h3><p>本版本开始的工作：</p><ul><li>修改WebServer主类，使用线程池来管理线程</li><li>源代码：<a href="https://github.com/lifengo/learning/tree/WebServer" target="_blank" rel="noopener">https://github.com/lifengo/learning/tree/WebServer</a></li></ul>]]></content:encoded>
      
      <comments>https://lifengo.github.io/2020/04/02/%E5%AE%9E%E7%8E%B0WebServer%E6%B5%81%E7%A8%8B/#disqus_thread</comments>
    </item>
    
    <item>
      <title>数据库</title>
      <link>https://lifengo.github.io/2020/03/29/MySQL%E7%AC%94%E8%AE%B0/</link>
      <guid>https://lifengo.github.io/2020/03/29/MySQL%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Sun, 29 Mar 2020 07:34:00 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;数据库简介:&lt;br&gt;  之前通过IO技术可以实现数据的增删改查操作,但是执行效率低,只能保存文本数据,所有功能都由程序员自己实现开发效率很低, 使用现成的数据软件,把数据的具体操作交由数据库软件处理,只需要学习如何使用数据库软件即可&lt;/li&gt;
&lt;li&gt;DBMS: DataBaseManagementSystem(数据库管理系统 俗称数据库软件),常见的DBMS有:MySQL Oracle SQLserver DB2 SQLite  &lt;/li&gt;
&lt;li&gt;数据库的分类&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;关系型数据库: 经过数学理论验证,可以将现实生活中的任何关系进行保存,以表为单位保存数据&lt;/li&gt;
&lt;li&gt;非关系型数据库: 一般以键值对的形式保存数据,一般用于处理一些特殊场景如:数据缓存
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ul><li>数据库简介:<br>  之前通过IO技术可以实现数据的增删改查操作,但是执行效率低,只能保存文本数据,所有功能都由程序员自己实现开发效率很低, 使用现成的数据软件,把数据的具体操作交由数据库软件处理,只需要学习如何使用数据库软件即可</li><li>DBMS: DataBaseManagementSystem(数据库管理系统 俗称数据库软件),常见的DBMS有:MySQL Oracle SQLserver DB2 SQLite  </li><li>数据库的分类</li></ul><ol><li>关系型数据库: 经过数学理论验证,可以将现实生活中的任何关系进行保存,以表为单位保存数据</li><li>非关系型数据库: 一般以键值对的形式保存数据,一般用于处理一些特殊场景如:数据缓存<a id="more"></a></li></ol><h3 id="主流DBMS介绍"><a href="#主流DBMS介绍" class="headerlink" title="主流DBMS介绍"></a>主流DBMS介绍</h3><ol><li>MySQL: Oracle公司产品,  08年被Sun公司收购  09Sun被Oracle收购,开源数据库  原MySQL程序员从Oracle离开创办MariaDB(Maria创始人女儿的名字),市场占有率排名第一</li><li>Oracle: Oracle公司产品, 公司老板拉里.艾莉森,闭源产品,市场占有率排名第二 </li><li>SQLServer: 微软公司产品, 主要应用在微软的整套解决方案中,市场占有率排名第三</li><li>DB2: IBM公司产品, 主要应用在IBM整套解决方案中  </li><li>SQLite: 轻量级数据库软件, 只具备基础的增删改查操作,一般应用在移动设备或嵌入式设备中</li></ol><p>网站: 操作系统+web服务软件+开发语言+数据库软件</p><h3 id="开源和闭源"><a href="#开源和闭源" class="headerlink" title="开源和闭源"></a>开源和闭源</h3><ol><li>开源:开放源代码  通过卖服务盈利  , 有大拿程序员对开源项目进行无偿的维护和升级</li><li>闭源:不开放源代码  通过卖产品+服务, 有大拿程序员为了刷存在感或获利的需求对闭源项目进行攻击  </li></ol><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><ul><li>Structured Query Language:结构化查询语言,用于程序员和数据库软件进行交互</li></ul><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><h3 id="如何连接数据库软件"><a href="#如何连接数据库软件" class="headerlink" title="如何连接数据库软件"></a>如何连接数据库软件</h3><ul><li>打开终端/命令行</li><li>window系统: 开始菜单-&gt;所有程序-&gt;MariaDB/MySQL-&gt;MySQL Client 输入密码回车</li><li>Linux系统:任何位置右键打开终端 输入以下指令<pre><code>mysql -uroot -p   回车  如果没有密码再次回车</code></pre></li><li>退出指令:<pre><code>exit</code></pre></li></ul><h3 id="数据库相关SQL"><a href="#数据库相关SQL" class="headerlink" title="数据库相关SQL"></a>数据库相关SQL</h3><ol><li>查看所有数据库</li></ol><ul><li>格式: show databases;</li></ul><ol start="2"><li>创建数据库</li></ol><ul><li>格式: create database 数据库名;<br>  create database db1;</li></ul><ol start="3"><li>查看数据库详情</li></ol><ul><li>格式: show create database 数据库名;<br>  show create database db1;</li></ul><ol start="4"><li>创建数据库指定字符集</li></ol><ul><li>格式: create database 数据库名 character set utf8/gbk;<br>  create database db3 character set gbk;<br>  show create database db3; //验证一下</li></ul><ol start="5"><li>删除数据库</li></ol><ul><li>格式: drop database 数据库名;<br>  drop database db3;</li></ul><ol start="6"><li>使用数据库</li></ol><ul><li>格式: use 数据库名;<br>  use db1;</li></ul><h3 id="表相关SQL"><a href="#表相关SQL" class="headerlink" title="表相关SQL"></a>表相关SQL</h3><ol><li>创建表</li></ol><ul><li>格式: create table 表名(字段1名 字段1类型,字段2名 字段2类型);<br>  create table person(name varchar(10),age int);    </li><li>练习: 创建学生表student 字段:学号id  姓名name 语文chinese 数学math 英语 english<br>  create table student(id int, name varchar(10), chinese int, math int, english int);</li></ul><ol start="2"><li>查看所有表</li></ol><ul><li>格式: show tables;</li></ul><ol start="3"><li>查看表详情</li></ol><ul><li>格式: show create table 表名;<br>  show create table student;</li><li>表引擎:<ol><li>innoDB(默认): 支持事务和外键等高级操作</li><li>myisam: 只支持基础的增删改查操作</li></ol></li></ul><ol start="4"><li>创建表指定引擎和字符集</li></ol><ul><li>格式:create table 表名(字段1名 字段1类型,字段2名 字段2类型) engine=myisam/innodb charset=utf8/gbk;<br>  create table t1(name varchar(10),age int)engine=myisam charset=gbk; </li></ul><h3 id="表相关SQL-续"><a href="#表相关SQL-续" class="headerlink" title="表相关SQL(续)"></a>表相关SQL(续)</h3><ol><li>查看表字段</li></ol><ul><li>格式: desc 表名;<br>  desc student;</li></ul><ol start="2"><li>删除表</li></ol><ul><li>格式: drop table 表名;<br>  drop table student;</li></ul><ol start="3"><li>修改表名</li></ol><ul><li>格式: rename table 原名 to 新名;<br>  rename table t1 to t2;</li></ul><ol start="4"><li>修改引擎和字符集</li></ol><ul><li>格式: alter table 表名 engine=myisam/innodb charset=utf8/gbk;<br>  alter table t2 engine=innodb charset=utf8;</li></ul><ol start="5"><li>添加表字段</li></ol><ul><li>格式: alter table 表名 add 字段名 字段类型;  //最后</li><li>格式: alter table 表名 add 字段名 字段类型 first;  //最前面</li><li>格式: alter table 表名 add 字段名 字段类型 after xxx;//在xxx的后面<br>  create table emp (name varchar(10)); //创建<br>  alter table emp add age int; //最后<br>  alter table emp add id int first; //最前面<br>  alter table emp add gender varchar(5) after name; //name后面</li></ul><ol start="6"><li>删除表字段</li></ol><ul><li>格式: alter table 表名 drop 字段名;<br>  alter table emp drop gender;</li></ul><ol start="7"><li>修改表字段名和类型</li></ol><ul><li>格式: alter table 表名 change 原字段名 新名 新类型;<br>  alter table emp change age gender varchar(10);</li></ul><ol start="8"><li>修改字段类型和位置</li></ol><ul><li>格式: alter table 表名 modify 字段名 新类型 first/after xxx;<br>  alter table emp modify gender varchar(5) first;<br>  alter table emp modify gender varchar(5) after id;</li></ul><h3 id="数据相关SQL"><a href="#数据相关SQL" class="headerlink" title="数据相关SQL"></a>数据相关SQL</h3><pre><code>create database mydb1 character set utf8;use mydb1;create table emp(id int,name varchar(10),age int)engine=innodb charset=utf8;</code></pre><ol><li>插入数据(增)   </li></ol><ul><li>全表插入格式: insert into 表名 values(值1,值2,值3);<br>  insert into emp values(1,’Tom’,8);</li><li>指定字段插入格式: insert into 表名(字段1名,字段2名) values(值1,值2);<br>  insert into emp (id,name) values(2,’Jerry’);</li><li>中文问题:<br>  insert into emp values(3,’刘备’,30);<br>  如果以上代码报错执行以下命令<br>  set names gbk;</li><li>批量插入:<br>  insert into emp values(4,’关羽’,25),(5,’张飞’,18);<br>  insert into emp (name) values(‘悟空’),(‘八戒’),(‘沙僧’);    </li></ul><ol start="2"><li>查询数据</li></ol><ul><li>格式: select 字段信息 from 表名 where 条件;<br>  select name,age from emp;  //查询所有数据的name和age<br>  select name,age from emp where age&lt;20;//20岁以下的name和age<br>  select * from emp;  //查询所有数据的所有字段信息</li></ul><ol start="3"><li>修改数据</li></ol><ul><li>格式: update 表名 set 字段名=xxx where 条件;<br>  update emp set age=500 where name=’悟空’;<br>  update emp set age=10 where id=2;</li></ul><ol start="4"><li>删除数据</li></ol><ul><li>格式: delete from 表名 where 条件;<br>  delete from emp where age&lt;20;<br>  delete from emp where age is null;<br>  delete from emp;//删除全部数据</li></ul><h3 id="主键约束-primary-key"><a href="#主键约束-primary-key" class="headerlink" title="主键约束 primary key"></a>主键约束 primary key</h3><ul><li>什么是主键: 表示数据唯一性的字段称为主键</li><li>什么是约束: 是创建表时给表字段添加的限制条件</li><li>主键约束: 让该字段的数据唯一且非空(不能重复,不能null)</li><li>格式:  create table t1(id int primary key,name varchar(10));<br>  insert into t1 values(1,’AAA’); //成功!<br>  insert into t1 values(1,’BBB’);//报错 不能重复<br>  insert into t1 values(null,’CCC’); //报错 不能为null</li></ul><h3 id="主键约束-自增"><a href="#主键约束-自增" class="headerlink" title="主键约束+自增"></a>主键约束+自增</h3><ul><li>自增数值只增不减,从历史最大值基础上+1</li><li>格式: create table t2(id int primary key auto_increment,name varchar(10));<br>  insert into t2 values(null,’aaa’); //1<br>  insert into t2 values(null,’bbb’); //2<br>  insert into t2 values(3,’ccc’);    //3<br>  insert into t2 values(10,’ddd’);   //10<br>  insert into t2 values(null,’eee’);  //11<br>  delete from t2 where id&gt;=10;<br>  insert into t2 values(null,’fff’);  //12</li></ul><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li>格式:<br>create table t3<br>  (id int primary key auto_increment comment ‘这是主键’,name varchar(10) comment ‘这是名字’);</li></ul><h3 id="的作用"><a href="#的作用" class="headerlink" title="`的作用"></a>`的作用</h3><ul><li>用于修饰表名和字段名,可以省略  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table &#96;t4&#96;(&#96;id&#96; int,&#96;name&#96; varchar(10));</span><br></pre></td></tr></table></figure></li></ul><h3 id="冗余"><a href="#冗余" class="headerlink" title="冗余"></a>冗余</h3><ul><li>由于表设计不够合理导致的大量重复数据称为数据冗余</li><li>练习:<ol><li>创建表保存以下数据<br> 集团总部下的教学研发部下的Java教研部下的苍老师工资200年龄18性别男<br> 集团总部下的市场部下的市场A部下的小明工资5000年龄25性别男</li></ol><ul><li>创建员工表和部门表</li><li>插入数据:<br><a href="https://imgchr.com/i/GnUco8" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/03/30/GnUco8.png" alt="GnUco8.png"></a></li></ul></li></ul><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><ul><li>什么是事务:事务是数据库中执行同一业务多条SQL语句的工作单元,可以保证多条SQL全部执行成功或全部执行失败.</li><li>事务相关指令:<ol><li>开启事务   begin;</li><li>提交事务   commit;</li><li>回滚      rollback;</li></ol></li><li>验证转账流程:<br>  create table user(id int primary key auto_increment,name varchar(10),money int,status varchar(5));<br>  insert into user values(null,’超人’,50,’冻结’),(null,’蝙蝠侠’,5000,’正常’),(null,’灭霸’,20,’正常’);</li><li>转账的SQL:<br>  update user set money=money-2000 where id=2 and status=’正常’;<br>  update user set money=money+2000 where id=1 and status=’正常’;</li><li>有事务保护的情况下 回滚流程:<ol><li>开启事务<br> begin;</li><li>蝙蝠侠-2000<br> update user set money=money-2000 where id=2 and status=’正常’;</li><li>此时在当前终端查询数据时 数据已经改变(因为查询到的是内存中的改动), 开启另外一个终端查询数据发现数据是没有改变的(因为新的终端查询到的是磁盘的数据)</li><li>超人+2000<br> update user set money=money+2000 where id=1 and status=’正常’;</li><li>此时从执行结果中发现一条成功一条失败,应该执行回滚操作<br> rollback;</li></ol></li><li>有事务保护的情况下 提交流程:<ol><li>开启事务<br> begin;</li><li>蝙蝠侠-2000<br> update user set money=money-2000 where id=2 and status=’正常’;</li><li>此时仍然是在内存中改动 磁盘数据没有发生改变 </li><li>灭霸+2000<br> update user set money=money+2000 where id=3 and status=’正常’;</li><li>此时两次改动都是在内存中改完,发现两次全部成功,所以执行提交<br> commit;</li></ol></li><li>保存回滚点:<br>  begin;<br>  update user set money=1 where id=2;<br>  savepoint s1;<br>  update user set money=2 where id=2;<br>  savepoint s2;<br>  update user set money=3 where id=2;<br>  rollback to s2;</li><li>事务的ACID特性   <strong>面试常考</strong><br>  保证事务正确执行的四大基本要素</li></ul><ol><li>Atomicity原子性: 最小不可拆分 保证全部执行成功或全部执行失败</li><li>Consistency一致性: 从一个一致状态到另一个一致状态</li><li>Isolation隔离性: 多个事务之间互相隔离互不影响 </li><li>Durability持久性: 当事务提交后数据保存到磁盘中持久生效  </li></ol><h3 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h3><h4 id="DDL-Data-Definition-Language数据定义语言"><a href="#DDL-Data-Definition-Language数据定义语言" class="headerlink" title="DDL Data Definition Language数据定义语言"></a>DDL Data Definition Language数据定义语言</h4><ul><li>truncate table 表名;<br>  删除表并创建新表    让自增数值清零</li><li>包括: create drop alter truncate </li><li>不支持事务 </li></ul><h4 id="DML-Data-Manipulation-Language数据操作语言"><a href="#DML-Data-Manipulation-Language数据操作语言" class="headerlink" title="DML Data Manipulation Language数据操作语言"></a>DML Data Manipulation Language数据操作语言</h4><ul><li>包括: insert update delete select</li><li>支持事务</li></ul><h4 id="DQL-Data-Query-Language-数据查询语言"><a href="#DQL-Data-Query-Language-数据查询语言" class="headerlink" title="DQL Data Query Language 数据查询语言"></a>DQL Data Query Language 数据查询语言</h4><ul><li>只包括: select</li></ul><h4 id="TCL-Transaction-Control-Language-事务控制语言"><a href="#TCL-Transaction-Control-Language-事务控制语言" class="headerlink" title="TCL Transaction Control Language 事务控制语言"></a>TCL Transaction Control Language 事务控制语言</h4><ul><li>包括: begin,commit,rollback,savepoint xxx, rollback to xxx;</li></ul><h4 id="DCL-Data-Control-Language-数据控制语言"><a href="#DCL-Data-Control-Language-数据控制语言" class="headerlink" title="DCL Data Control Language 数据控制语言"></a>DCL Data Control Language 数据控制语言</h4><ul><li>负责分配用户权限相关的SQL </li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ol><li>整数:  int(m) 和 bigint(m)  m代表的是显示长度,需要结合zerofill使用<br>   create table t_int(id int,age int(10) zerofill);<br>   insert into t_int values(1,18);<br>   select * from t_int;    </li><li>浮点数: double(m,d)  m代表的是总长度 d代表小数长度,超高精度的浮点数decimal(m,d)  <pre><code>25.234    m=5  d=3</code></pre></li><li>字符串: </li></ol><ul><li>char(m) 固定长度 最大长度255 好处执行效率略高  </li><li>varchar(m) 可变长度 好处节省空间 最大长度65535(但是超过255建议使用text)  </li><li>text(m) 可变长度 最大长度65535</li></ul><ol start="4"><li>日期:</li></ol><ul><li>date: 保存年月日</li><li>time: 保存时分秒</li><li>datetime: 保存年月日时分秒,默认值为null,最大9999-12-31</li><li>timestamp(时间戳):保存年月日时分秒,默认值为当前系统时间,最大值2038-1-19<pre><code>create table t_date(t1 date,t2 time,t3 datetime,t4 timestamp); insert into t_date values(&apos;2019-6-20&apos;,null,null,null);insert into t_date values(null,&apos;16:46:30&apos;,&apos;2019-06-20 16:30:30&apos;,null);</code></pre></li></ul><h3 id="导入-sql文件"><a href="#导入-sql文件" class="headerlink" title="导入*.sql文件"></a>导入*.sql文件</h3><ul><li><p>windows系统 把文件放在C或D盘的根目录<br>  source d:/tables.sql;</p><p>  tables.sql文件地址链接: <a href="https://pan.baidu.com/s/1btFOzc6IjpgEZnaug1UcGA" target="_blank" rel="noopener">https://pan.baidu.com/s/1btFOzc6IjpgEZnaug1UcGA</a> 提取码: v1qm</p></li><li><p>linux系统 把文件放在桌面<br>  source /home/soft01/桌面/tables.sql</p><p>  show databases;<br>  use newdb3;<br>  show tables;      四张表</p><p>  select * from t_item;<br>  如果是乱码  执行     set names gbk;</p></li></ul><h3 id="is-null-和-is-not-null"><a href="#is-null-和-is-not-null" class="headerlink" title="is null 和 is not null"></a>is null 和 is not null</h3><ol><li>从员工表中查询 没有上级领导的员工姓名,工资<br> select ename,sal from emp where mgr is null;</li><li>查询有领导的员工姓名和上级领导的编号<br> select ename,mgr from emp where mgr is not null;</li></ol><h3 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h3><p>select ename as ‘姓名’ from emp;<br>select ename ‘姓名’ from emp;<br>select ename 姓名 from emp;</p><h3 id="比较运算符-gt-lt-gt-lt-和-lt-gt"><a href="#比较运算符-gt-lt-gt-lt-和-lt-gt" class="headerlink" title="比较运算符 &gt; &lt; &gt;= &lt;= = !=和&lt;&gt;"></a>比较运算符 &gt; &lt; &gt;= &lt;= = !=和&lt;&gt;</h3><ol><li>查询工资在2000以下的员工姓名和工资<br> select ename,sal from emp where sal&lt;2000;</li><li>查询职位(job)是manager的员工姓名、工资、职位<br> select ename,sal,job from emp where job=’manager’;</li><li>查询工资小于等于1600的员工姓名、职位、工资<br> select ename,job,sal from emp wehere sal&lt;=1600;</li><li>查询不是10号部门的员工姓名和部门编号（两种写法）<br> select ename,deptno from emp where deptno!=10;<br> select ename,deptno from emp where deptno&lt;&gt;10;</li><li>查询商品表（t_item）中单价为23的商品信息<br> select * from t_item where price=23 \G;</li><li>查询单价不是8443的商品标题(title)<br> select title from t_item where price!=8443;</li></ol><h3 id="去重-distinct"><a href="#去重-distinct" class="headerlink" title="去重 distinct"></a>去重 distinct</h3><ol><li>查询员工表中有哪些职位<br> select distinct job from emp;</li><li>查询员工表中出现了那几个部门编号<br> select distinct deptno from emp;</li></ol><h3 id="and-和-or"><a href="#and-和-or" class="headerlink" title="and 和 or"></a>and 和 or</h3><ul><li>如果查询数据时需要同时满足多个条件则使用and   &amp;&amp;</li><li>如果查询数据时只需要满足条件中的某一个则使用or ||</li></ul><ol><li>查询10号部门中工资低于2000的员工信息<br> select * from emp where deptno=10 and sal&lt;2000;</li><li>查询部门是30号或者工资高于3000的员工信息<br> select * from emp where deptno=30 or sal&gt;3000;</li></ol><h3 id="模糊查询-like"><a href="#模糊查询-like" class="headerlink" title="模糊查询 like"></a>模糊查询 like</h3><ul><li>% 代表0或多个未知字符</li><li>_ 代表单个未知字符<br>  举例:   第一个字符是x       x%<pre><code>最后一个字符是y     %y包含               %x%倒数第二个字符是x       %x_x开头y结尾         x%y第二个字符是x 倒数第三个字符是y     _x%y__</code></pre></li></ul><ol><li>查询名字以j开头的所有员工姓名<br> select ename from emp where ename like ‘j%’;</li><li>查询名字第二个字符是l的员工姓名和工资<br> select ename,sal from emp where ename like ‘_l%’;</li><li>查询t_item表中 标题中包含记事本的商品标题<br> select title from t_item where title like ‘%记事本%’;</li><li>查询职位中包含an并且工资高于1500的员工姓名、工资、职位<br> select ename,sal,job from emp where job like ‘%an%’ and sal&gt;1500;</li><li>查询有赠品的dell商品详情(卖点sell_point中包含“赠”，并且title包含dell)<br> select * from t_item where sell_point like ‘%赠%’ and title like ‘%dell%’;</li><li>查询单价低于100块钱的笔记本标题和价格(提示:title包含笔记本)<br> select title,price from t_item where price&lt;100 and title like ‘%笔记本%’;</li><li>查询有图片的得力商品信息（image字段不为null,title包含得力）<br> select * from t_item where image is not null and title like ‘%得力%’;</li><li>查询不包含a的员工姓名<br> select ename from emp where ename not like ‘%a%’;</li></ol><h3 id="between-x-and-y"><a href="#between-x-and-y" class="headerlink" title="between x and y"></a>between x and y</h3><ol><li>查询工资在2000到3000之间的员工姓名和工资(要求包含2000和3000)<br> select ename,sal from emp where sal&gt;=2000 and sal&lt;=3000;<br> select ename,sal from emp where sal between 2000 and 3000;</li><li>查询单价在50到100之间的商品标题和单价<br> select title,price from t_item where price between 50 and 100;</li><li>查询工资在1000到2000之外的员工姓名和工资<br> select ename,sal from emp where sal not between 1000 and 2000;</li></ol><h3 id="in"><a href="#in" class="headerlink" title="in"></a>in</h3><ul><li>当查询字段值为多个值的时候使用</li></ul><ol><li>查询员工工资为800,1300,1500的员工信息<br> select * from emp where sal=800 or sal=1300 or sal=1500;<br> select * from emp where sal in(800,1300,1500);</li><li>查询商品价格为56,58,89的商品标题和单价<br> select title,price from t_item where price in(56,58,89);</li><li>查询工资不等于3000,5000,1500的员工姓名和工资<br> select ename,sal from emp where sal not in(3000,5000,1500);</li></ol><h4 id="综合练习题"><a href="#综合练习题" class="headerlink" title="综合练习题"></a>综合练习题</h4><ol><li>查询分类id为238,917的商品信息 (涉及字段自己查)<br> select * from t_item where category_id in(238,917);</li><li>查询价格在50-200之间的得力商品标题和价格<br> select title,price from t_item where price between 50 and 200 and title like ‘%得力%’;</li><li>查询有上级领导并且工资小于2000的员工姓名、工资和领导编号<br> select ename,sal,mgr from emp where mgr is not null and sal&lt;2000;</li><li>查询有奖金并且有上级领导的员工姓名、奖金、领导编号<br> select ename,comm,mgr from emp where comm&gt;0 and mgr is not null;</li><li>查询名字中包含a,并且工资在3000以内的员工从事的职业有哪几种<br> select distinct job from emp where ename like ‘%a%’ and sal&lt;3000;</li></ol><h3 id="排序-order-by"><a href="#排序-order-by" class="headerlink" title="排序 order by"></a>排序 order by</h3><ul><li>格式: order by 字段名 asc/desc       asc:升序(默认)   desc:降序</li><li>order by 写在条件的后面</li></ul><ol><li>查询工资小于3000的员工姓名和工资 要求按照工资降序排序<br> select ename,sal from emp where sal&lt;3000 order by sal desc;</li><li>查询10号部门每个员工的姓名和工资 按照工资升序排序<br> select ename,sal from emp where deptno=10 order by sal;</li><li>查询有奖金的员工姓名、工资、奖金  按照奖金降序排序<br> select ename,sal,comm from emp where comm&gt;0 order by comm desc; </li><li>查询单价低于100的商品标题和单价并按照单价升序排序<br> select title,price from t_item where price&lt;100 order by price;</li></ol><ul><li>多字段排序: order by 字段1 asc/desc,字段2 asc/desc</li></ul><ol start="5"><li>查询每个员工的姓名、工资和部门编号 按照部门编号降序排序,如果部门一致则按照工资升序排序<br> select ename,sal,deptno from emp order by deptno desc,sal;</li></ol><h3 id="分页查询-limit-跳过的条数-请求的条数"><a href="#分页查询-limit-跳过的条数-请求的条数" class="headerlink" title="分页查询 limit 跳过的条数,请求的条数"></a>分页查询 limit 跳过的条数,请求的条数</h3><ul><li>请求第一页的10条数据  limit 0,10</li><li>请求第三页的10条数据  limit 20,10</li><li>请求第八页的5条数据   limit  35,5  </li><li>公式   limit (页数-1)*数量,数量</li><li>请求第四页的7条数据  limit 21,7</li></ul><ol><li>查询每个员工的姓名和工资,按照工资降序排序 请求第三页的3条数据<br> select ename,sal from emp order by sal desc limit 6,3;</li><li>请求员工表中工资最高的前三名员工的信息<br> select * from emp order by sal desc limit 0,3;</li><li>查询商品标题和单价 按照单价升序排序 第三页的5条数据<br> select title,price from t_item order by price limit 10,5;</li><li>查询30号部门中工资最高的员工信息<br> select * from emp where deptno=30 order by sal desc limit 0,1;</li></ol><h3 id="数值计算"><a href="#数值计算" class="headerlink" title="数值计算 + - * / %"></a>数值计算 + - * / %</h3><ol><li>查询员工姓名,工资和年终奖(年终奖=工资<em>5)<br> select ename,sal,sal</em>5 年终奖 from emp;</li><li>查询商品标题，商品单价，库存和总价值（单价<em>库存）<br> select title,price,num,price</em>num 总价值 from t_item;</li><li>查询每个员工的姓名和 加薪5块钱之后的工资<br> select ename,sal+5 from emp;</li></ol><h3 id="日期相关SQL"><a href="#日期相关SQL" class="headerlink" title="日期相关SQL"></a>日期相关SQL</h3><ol><li>获取系统时间 now()<br> create table t_date(name varchar(10),birthday datetime);<br> insert into t_date values(‘刘德华’,now());</li><li>获取当前的年月日 和当前的时分秒  cur=current 当前<br> select “hellworld”;<br> select curdate(),curtime();</li><li>从年月日时分秒中 提取年月日 和 提取时分秒<br> select date(now());<br> select time(now());<br> 查询商品的上传日期 只查询年月日<br> select created_time from t_item; //商品上传年月日时分秒<br> select date(created_time) from t_item;//商品上传年月日</li><li>从年月日时分秒中提取时间分量<br> select extract(year from now());<br> select extract(month from now());<br> select extract(day from now());<br> select extract(hour from now());<br> select extract(minute from now());<br> select extract(second from now());<br> 查询员工入职的年份<br> select extract(year from hiredate) from emp;</li><li>日期格式化 date_format(时间,格式);</li></ol><ul><li>格式规则:<br>  %Y 四位年 2019  %y 两位年 19<br>  %m 2位月  06   %c 1位月  6<br>  %d  日<br>  %H 24小时   %h  12小时<br>  %i 分钟<br>  %s 秒</li><li>测试: 把now()  2019-06-21 15:29:30  转成 2019年06月21号 15点29分30秒<br>  select date_format(now(),’%Y年%m月%d号 %H点%i分%s秒’);</li></ul><ol start="6"><li>反向格式化 str_to_date(时间,格式)<br> 21.06.2019 15点36分20秒 转回  2019-06-21 15:36:20<br> select str_to_date(‘21.06.2019 15点36分20秒’,’%d.%m.%Y %H点%i分%s秒’);</li></ol><h3 id="ifnull-x-y"><a href="#ifnull-x-y" class="headerlink" title="ifnull(x,y)"></a>ifnull(x,y)</h3><ul><li>age=ifnull(x,y)   如果x值为null则age=y 否则age=x</li><li>练习:修改奖金为null的值为0 不为null则不变<br>  update emp set comm=ifnull(comm,0);</li></ul><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><ul><li>对查询的多条数据进行统计查询: 平均值,最大值,最小值,求和,计数</li></ul><ol><li>平均值 avg(字段名)<br> -查询员工的平均工资<br> select avg(sal) from emp;</li><li>最大值 max(字段名)<br> -查询20号部门的最高工资<br> select max(sal) from emp where deptno=20;</li><li>最小值 min(字段名)<br> -查询名字里面包含a的员工的最低工资<br> select min(sal) from emp where ename like ‘%a%’;</li><li>求和 sum(字段名)<br> -查询10号部门工资总和<br> select sum(sal) from emp where deptno=10;</li><li>计数 count(字段名)<br> -查询工资高于2000的员工数量<br> select count(*) from emp where sal&gt;2000;</li></ol><ul><li>查询20号部门的平均工资,最高工资,最低工资,工资总和,员工数量<br>  select avg(sal),max(sal),min(sal),sum(sal),count(*) from emp where deptno=20;</li></ul><h3 id="字符串相关"><a href="#字符串相关" class="headerlink" title="字符串相关"></a>字符串相关</h3><ol><li>字符串拼接concat(s1,s2);   s1s2<br> select concat(‘aa’,’bb’);<ul><li>查询每个员工的姓名和工资 要求工资以元为单位<br>select ename,concat(sal,’元’) from emp;</li></ul></li><li>获取字符串的长度 char_length(str);<br> select char_length(‘abc’);<ul><li>查询每个员工的姓名和名字长度<br>select ename,char_length(ename) from emp;</li></ul></li><li>获取字符串出现的位置 instr(str,substr);<br> select instr(‘abcdefg’,’d’);</li><li>转大写和转小写<br> select upper(‘abc’),lower(‘NBA’);</li><li>截取字符串<ul><li>左边截取   select left(‘abcdefg’,2);</li><li>右边截取   select right(‘abcdefg’,2);</li><li>自由截取    select substring(‘abcdefg’,2,3); 3代表长度</li></ul></li><li>去两端空白 trim()<br> select trim(‘   a b   ‘);  </li><li>重复repeat()<br> select repeat(‘ab’,2);</li><li>替换replace()<br> select replace(‘abcde abc’,’b’,’m’);</li><li>反转reverse()<br> select reverse(‘abc’);</li></ol><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><ol><li>案例：查询没有上级领导的员工的编号，姓名，工资</li><li>案例：查询emp表中没有奖金的员工的姓名，职位，工资，以及奖金</li><li>案例：查询emp表中含有奖金的员工的编号，姓名，职位，以及奖金</li><li>案例：查询含有上级领导的员工的姓名，工资以及上级领导的编号</li><li>案例：查询emp表中名字以‘S’开头的所有员工的姓名</li><li>案例：查询emp表中名字的最后一个字符是’S’的员工的姓名</li><li>案例：查询倒数的第2个字符是‘E’的员工的姓名</li><li>案例：查询emp表中员工的倒数第3个字符是‘N’的员工姓名</li><li>案例：查询emp表中员工的名字中包含‘A’的员工的姓名</li><li>案例：查询emp表中名字不是以’K’开头的员工的所有信息</li><li>案例：查询emp表中名字中不包含‘A’的所有员工的信息</li><li>案例：做文员的员工人数（job 中 含有 CLERK 的）</li><li>案例：销售人员 job: SALESMAN 的最高薪水</li><li>案例：最早和最晚入职时间</li><li>案例：查询类别 163的商品总库存量</li><li>案例：查询 类别 163 的商品</li><li>案例：查询商品价格不大于100的商品名称列表</li><li>案例：查询品牌是联想,且价格在40000以上的商品名称和价格</li><li>案例：查询品牌是三木,或价格在50以下的商品名称和价格</li><li>案例：查询品牌是三木、广博、齐心的商品名称和价格</li><li>案例：查询品牌不是联想、戴尔的商品名称和价格</li><li>案例：查找品牌是联想且价格大于10000的名称</li><li>案例：查询联想或戴尔的电脑名称列表</li><li>案例：查询emp表中员工的编号，姓名，职位，工资，并且工资在1000~2000之间。</li><li>案例：查询emp表中员工在10号部门，并且含有上级领导的员工的姓名，职位，上级领导编号以及所属部门的编号</li><li>案例：查询emp表中名字中包含’E’，并且职位不是MANAGER的员工的编号，姓名，职位，以及工资。</li><li>案例：查询emp表中10号部门或者20号部门中员工的编号，姓名，所属部门的编号</li><li>案例：查询emp表中没有奖金或者名字的倒数第2个字母不是T的员工的编号，姓名，职位以及奖金</li><li>案例：查询工资高于3000或者部门编号是30的员工的姓名，职位，工资，入职时间以及所属部门的编号</li><li>案例：查询不是30号部门的员工的所有信息</li><li>案例：查询奖金不为空的员工的所有信息</li><li>案例：查询emp表中所有员工的编号，姓名，职位，根据员工的编号进行降序排列</li><li>案例：查询emp表中部门编号是10号或者30号中，所有员工姓名，职务，工资，根据工资进行升序排列</li><li>案例：查询emp表中所有的数据，然后根据部门的编号进行升序排列，如果部门编号一致，根据员工的编号进行降序排列</li><li>案例：查询emp表中工资高于1000或者没有上级领导的员工的编号，姓名，工资，所属部门的编号，以及上级领导的编号，根据部门编号进行降序排列，如果部门编号一致根据工资进行升序排列。</li><li>案例：查询emp表中名字中不包含S的员工的编号，姓名，工资，奖金，根据工资进行升序排列，如果工资一致，根据编号进行降序排列</li><li>案例：统计emp表中员工的总数量</li><li>案例：统计emp表中获得奖金的员工的数量</li><li>案例：求出emp表中所有的工资累加之和</li><li>案例：求出emp表中所有的奖金累加之和</li><li>案例：求出emp表中员工的平均工资</li><li>案例：求出emp表中员工的平均奖金</li><li>案例：求出emp表中员工的最高工资</li><li>案例：求出emp表中员工编号的最大值</li><li>案例：查询emp表中员工的最低工资。</li><li>案例：查询emp表中员工的人数，工资的总和，平均工资，奖金的最大值，奖金的最小值,并且对返回的列起别名。</li></ol>]]></content:encoded>
      
      <comments>https://lifengo.github.io/2020/03/29/MySQL%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>JavaWeb</title>
      <link>https://lifengo.github.io/2020/03/26/JavaWeb%E7%AC%94%E8%AE%B0/</link>
      <guid>https://lifengo.github.io/2020/03/26/JavaWeb%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Thu, 26 Mar 2020 02:29:38 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;JavaWeb&quot;&gt;&lt;a href=&quot;#JavaWeb&quot; class=&quot;headerlink&quot; title=&quot;JavaWeb&quot;&gt;&lt;/a&gt;JavaWeb&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;web前端
- HTML: 负责搭建页面结构和内容            （盖房子 毛坯房）
- CSS: 负责美化页面                        （装修）
- JavaScript:负责给页面添加动态效果和动态内容
- JQeury: 是一个js框架，为了简化js开发而生&lt;/code&gt;&lt;/pre&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="JavaWeb"><a href="#JavaWeb" class="headerlink" title="JavaWeb"></a>JavaWeb</h2><pre><code>web前端- HTML: 负责搭建页面结构和内容            （盖房子 毛坯房）- CSS: 负责美化页面                        （装修）- JavaScript:负责给页面添加动态效果和动态内容- JQeury: 是一个js框架，为了简化js开发而生</code></pre><a id="more"></a><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><ul><li><p>Hyper Text Mark Language:超文本标言，超文本：指不仅仅是纯文本还包括字体的各种设置（大小、颜色、样式等）和多媒体(图片、视频、音频)相关。</p></li><li><p>html学习内容：主要学习有哪些标签，标签有哪些属性，标签和标签之间的嵌套关系</p><h3 id="html结构"><a href="#html结构" class="headerlink" title="html结构"></a>html结构</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;!-- 文档声明    告诉浏览器使用html哪个版本的标准解析页面    这是h5标准--&gt;    &lt;html&gt;&lt;!-- 根标签 --&gt;        &lt;head&gt;&lt;!-- 头：里面的内容是给浏览器看的 --&gt;            &lt;meta charset=&quot;UTF-8&quot;&gt;&lt;!-- 告诉浏览器字符集 --&gt;            &lt;!-- 设置页面标题 --&gt;            &lt;title&gt;第一个html页面&lt;/title&gt;        &lt;/head&gt;        &lt;body&gt;&lt;!-- 体：里面的内容是给用户看的 --&gt;        &lt;/body&gt;    &lt;/html&gt;</code></pre><h3 id="body内部常见的标签"><a href="#body内部常见的标签" class="headerlink" title="body内部常见的标签"></a>body内部常见的标签</h3><h4 id="文本标题"><a href="#文本标题" class="headerlink" title="文本标题"></a>文本标题</h4></li><li><p>h1-h6</p></li><li><p>特点： 独占一行，自带上下外边距</p></li><li><p>属性： align=left/right/center</p><h4 id="段落标签-p"><a href="#段落标签-p" class="headerlink" title="段落标签 p"></a>段落标签 p</h4></li><li><p>特点： 独占一行，自带上下外边距</p><h4 id="水平分割线-hr"><a href="#水平分割线-hr" class="headerlink" title="水平分割线 hr"></a>水平分割线 hr</h4><h4 id="换行-br"><a href="#换行-br" class="headerlink" title="换行 br"></a>换行 br</h4><h4 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h4></li></ul><ol><li>无序列表： ul（type）  li</li><li>有序列表： ol(type start reversed)    li</li><li>定义列表： dl  dt  dd  自带层级效果</li><li>列表嵌套： 有序和无序列表可以任意无限嵌套<h4 id="分区标签"><a href="#分区标签" class="headerlink" title="分区标签"></a>分区标签</h4></li></ol><ul><li>作用：用于统一管理多个标签 类似于容器，分区标签自身没有显示效果</li></ul><ol><li>span：行内分区元素，共占一行</li><li>div：块级分区元素，独占一行</li></ol><ul><li>html5标准中新增了几个分区元素<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;头部&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;体部&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;脚部&lt;&#x2F;div&gt;</span><br><span class="line">取代上面的写法 更直观</span><br><span class="line">&lt;header&gt;头部&lt;&#x2F;header&gt;</span><br><span class="line">&lt;article&gt;正文&lt;&#x2F;article&gt;</span><br><span class="line">&lt;footer&gt;脚部&lt;&#x2F;footer&gt;</span><br></pre></td></tr></table></figure><h4 id="标签-元素-分类"><a href="#标签-元素-分类" class="headerlink" title="标签(元素)分类"></a>标签(元素)分类</h4></li></ul><ol><li>块级元素：独占一行<br> div，h1-h6，p，hr</li><li>行内元素：共占一行<br> span, 加粗 strong和b，斜体 em和i，删除线del和s，下划线u<h4 id="实体引用（特殊字符）"><a href="#实体引用（特殊字符）" class="headerlink" title="实体引用（特殊字符）"></a>实体引用（特殊字符）</h4></li><li>空格：有折叠问题       <code>&amp;nbsp;</code>  牛逼是屁</li><li>小于号                <code>&amp;lt;</code>    老铁</li><li>大于号                 <code>&amp;gt;</code>   干他<br>html    好他妈老    how to  ml<h4 id="图片标签img"><a href="#图片标签img" class="headerlink" title="图片标签img"></a>图片标签img</h4></li></ol><ul><li>src:路径<ol><li>相对路径：访问站内资源<br> a. 同级目录  直接写图片名<br> b. 上级目录  ../图片名<br> c. 下级目录  文件夹名/图片名</li><li>绝对路径：访问站外资源，好处节省网站资源，坏处可能找不到图片</li></ol></li><li>alt:当图片不能正常显示时显示的文本</li><li>title:当鼠标悬停时显示的文本</li><li>width/height: 宽高，赋值方式：1. 像素 2. 上级元素的百分比 如果只设置宽度 高度会等比例缩放</li><li>支持的图片格式： jpg/jpeg  png(支持透明色)  gif动图</li><li>练习：<br>在页面中添加两张图片，<br>第一张图片显示站内资源的图片(随便找一张)宽度300高度150，<br>鼠标悬停时显示”嘿嘿” ,<br>第二张图片从tmooc里面随便找一张图片<br>宽度body的30% 鼠标悬停时显示”呵呵”<h4 id="图片地图map"><a href="#图片地图map" class="headerlink" title="图片地图map"></a>图片地图map</h4></li><li>map属性：name 代表地图的唯一标识</li><li>子元素： area</li><li>area属性：shape形状(矩形rect、圆形circle)，coords坐标（矩形四个值两个对角线点的坐标，圆形三个值圆心坐标和半径）href:资源路径 页面资源和文件资源（浏览器能浏览则浏览 不能则下载）<h4 id="超链接a"><a href="#超链接a" class="headerlink" title="超链接a"></a>超链接a</h4></li><li>如果a标签不写href属性则就是纯文本</li><li>target=_blank 开启新的窗口显示该页面，如果不写默认是从当前窗口跳转</li><li>如果a标签包裹文本内容则是文本超链接，如果包裹的是图片则是图片超链接</li><li>页面内部跳转<ol><li>设置锚点用于定位  <code>&lt;a id=&quot;top&quot;&gt;&lt;/a&gt;</code></li><li>通过超链接跳转到锚的位置   <code>&lt;a href=&quot;#top&quot;&gt;回到顶部&lt;a&gt;</code><br>如果跳转的目的地有标签则直接给标签添加id属性即可<h4 id="表格table"><a href="#表格table" class="headerlink" title="表格table"></a>表格table</h4></li></ol></li><li>border边框的粗细</li><li>cellspacing：单元格间距和单元格距外边框的距离</li><li>cellpadding：单元格的内边距</li><li>跨行rowspan 跨列colspan</li><li>caption表格的标题</li><li>th table head 表头，加粗并居中</li><li>分区标签：thead tbody tfoot  对多行进行统一管理（比如统一添加样式）分区标签自身没有显示效果<h4 id="表单form"><a href="#表单form" class="headerlink" title="表单form"></a>表单form</h4></li><li>作用:获取用户输入的各种数据把数据提交到服务器</li><li>主要学习有哪些控件：文本输入框、密码框、提交按钮、单选、多选、下拉选、日期选择器、文件选择器等</li><li>文本输入框 input type=text  name  value  placeholder占位文本 最大长度maxlength  只读readonly</li><li>密码框 input type=password  name</li><li>单选  input type=radio  name  value  默认选中checked    通过label标签扩充点击范围</li><li>多选 input type=checkbox name value  属性和单选一样</li><li>日期 input type=date  name</li><li>文件选择  input type=file  name</li><li>隐藏域 当需要给服务器提交数据但是此数据不需要给用户展示的时候使用 input type=hidden  name value</li><li>下拉选  select:name    子标签 option:value selected默认选中</li><li>文本域  textarea:name rows行  cols列 占位文本placeholder</li><li>提交按钮 input type=submit   value修改文本内容</li><li>重置按钮 input type=reset   value修改文本内容</li><li>自定义按钮  input type=button  value修改文本内容</li></ul><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="CSS层叠样式表-用于美化页面"><a href="#CSS层叠样式表-用于美化页面" class="headerlink" title="CSS层叠样式表  用于美化页面"></a>CSS层叠样式表  用于美化页面</h3><h4 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h4><ul><li>内联:在标签里面添加style属性,弊端:不能复用</li><li>内部:在head标签里面添加style标签 通过选择器添加样式 好处可以当前页面复用,弊端:不能多页面复用</li><li>外部:在单独css文件中写样式代码 在html页面中通过link标签引入css文件,支持多页面复用</li><li>引入方式的优先级:内联最高,内部外部一样 后执行覆盖先执行<h4 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h4></li><li>标签名  div{}</li><li>id选择器   #id{}</li><li>class     .class{}</li><li>属性     标签名[属性名=’值’]</li><li>分组    div,#id{}</li><li>子孙后代  div span{}</li><li>子元素    div&gt;span{}</li><li>伪类     未访问link 访问过visited 悬停hover  点击active</li><li>任意元素   *{}<h4 id="颜色赋值"><a href="#颜色赋值" class="headerlink" title="颜色赋值"></a>颜色赋值</h4></li><li>通过颜色单词 red</li><li>6位16进制   #ff0000</li><li>3位16进制   #f00</li><li>3位10进制   rgb(255,0,0)</li><li>4位10进制   rgba(255,0,0,0-1)<h4 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h4></li><li>background-image:url(); 设置背景图片</li><li>background-size:100px 200px; 设置尺寸</li><li>background-repeat:no-repeat; 禁止重复</li><li>background-position: left/right/top/bottom/center    百分比<h4 id="盒子模型-外边距-边框-内边距-宽高"><a href="#盒子模型-外边距-边框-内边距-宽高" class="headerlink" title="盒子模型= 外边距+边框+内边距+宽高"></a>盒子模型= 外边距+边框+内边距+宽高</h4></li><li>宽高:width/height  1.像素 2.上级元素的百分比<br>  行内元素不能修改宽高 由内容决定</li><li>外边距:元素距上级元素或相邻兄弟元素的距离<pre><code>margin-left/right/top/bottom:10px;margin:10px;margin:10px 20px; 上下10px 和左右20pxmargin:0 auto; 居中margin:10px 20px 30px 40px  上右下左行内元素上下外边距无效上下相邻取最大 左右相邻相加粘连问题:当元素的上边缘和上级元素的上边缘重叠时,通过给上级元素添加overflow:hidden解决</code></pre><h4 id="盒子模型之边框"><a href="#盒子模型之边框" class="headerlink" title="盒子模型之边框"></a>盒子模型之边框</h4></li><li>单个方向添加边框:<br>  border-left/right/top/bottom: 粗细 样式 颜色;</li><li>四个方向添加边框<br>  border:粗细 样式 颜色;</li><li>行内元素边框不影响元素所占高度</li><li>圆角:<br>  border-radius: 值越大越圆  超过宽高一半时变成圆形(前提宽高一样)<h4 id="盒子模型之内边距"><a href="#盒子模型之内边距" class="headerlink" title="盒子模型之内边距"></a>盒子模型之内边距</h4></li><li>什么是内边距: 元素边框距内容的距离</li><li>如果需要移动元素的文本内容则必须使用内边距,如果需要移动元素的子元素内容可以使用两种方式1. 给子元素添加外边距 2.给元素添加内边距(会影响元素的宽高)</li><li>行内元素内边距不影响元素所占高度<h4 id="文本相关样式"><a href="#文本相关样式" class="headerlink" title="文本相关样式"></a>文本相关样式</h4></li></ul><ol><li>水平对齐方式<br> text-align:left/right/center</li><li>文本修饰<br> text-decoration:overline/underline/line-through/none</li><li>文本阴影<br> text-shadow:颜色 x偏移值 y偏移值 浓度(值越小越清晰)</li><li>行高<br> line-height: 像素</li><li>文本颜色<br> color:red;<h4 id="字体相关"><a href="#字体相关" class="headerlink" title="字体相关"></a>字体相关</h4></li><li>字体大小 font-size</li><li>字体加粗 font-weight:bold/normal(去掉加粗效果)</li><li>斜体  font-style:italic</li><li>字体设置 font-family: xxx,xxx,xxx;</li></ol><h4 id="CSS的三大特性"><a href="#CSS的三大特性" class="headerlink" title="CSS的三大特性"></a>CSS的三大特性</h4><ol><li>继承性: 元素可以继承上级元素的部分样式(包括文本相关和字体相关) ,个别标签自带效果不受继承影响,如:h1-h6自带字体大小不受影响,超链接a标签自带字体颜色也不受继承影响.</li><li>层叠性: 不同的选择器有可能作用到相同某一个元素,如果作用的样式不同则全部生效(层叠到一起全部生效),如果作用的样式相同则由优先级来决定</li><li>优先级: 作用范围越小优先级越高  id&gt;class&gt;标签名&gt;继承  , 直接选中优先级高于间接选中(继承属于间接选中)<h4 id="溢出设置overflow"><a href="#溢出设置overflow" class="headerlink" title="溢出设置overflow"></a>溢出设置overflow</h4></li></ol><ul><li>hidden 隐藏</li><li>visible 显示</li><li>scroll 滚动显示<h4 id="显示方式display"><a href="#显示方式display" class="headerlink" title="显示方式display"></a>显示方式display</h4></li><li>block: 块级元素的默认值,独占一行,可以修改宽高</li><li>inline: 行内元素的默认值,共占一行,但是不能修改宽高</li><li>inline-block:行内块, 共占一行并且可以修改宽高<h4 id="行内元素的垂直对齐方式vertical-align"><a href="#行内元素的垂直对齐方式vertical-align" class="headerlink" title="行内元素的垂直对齐方式vertical-align"></a>行内元素的垂直对齐方式vertical-align</h4></li><li>top 上对齐</li><li>bottom下对其</li><li>middle 中间对齐</li><li>baseline 基线对齐<h3 id="定位方式-4-1"><a href="#定位方式-4-1" class="headerlink" title="定位方式 4+1"></a>定位方式 4+1</h3><h4 id="position定位"><a href="#position定位" class="headerlink" title="position定位"></a>position定位</h4></li></ul><ol><li>静态定位static(默认)<br> 也称为文档流定位,块级元素从上到下,行内元素从左向右</li><li>相对定位relative<br> 元素不脱离文档流,通过top/bottom/left/right让元素从初始位置做偏移</li></ol><ul><li>当需要移动某个元素,但不希望其它元素受影响时使用.</li></ul><ol start="3"><li>绝对定位absolute<br> 元素脱离文档流,通过top/bottom/left/right让元素相对于窗口做位置偏移(默认)或相对于某个上级元素做位置偏移(在上级元素中添加相对定位)</li></ol><ul><li>当需要往页面中添加一个元素,但不希望影响其它元素的位置</li></ul><ol start="4"><li>固定定位fixed<br> 元素脱离文档流,通过top/bottom/left/right让元素相对于窗口做位置偏移<h4 id="浮动定位"><a href="#浮动定位" class="headerlink" title="浮动定位"></a>浮动定位</h4></li></ol><ul><li>元素脱离文档流,元素从当前所在行向左或向右浮动,当撞到上级元素边框或其它浮动元素时停止</li><li>通过外边距控制元素的具体位置</li><li>一行装不下会自动换行, 有可能被卡住</li><li>如果元素的所有子元素全部浮动,则自动识别的高度为0,通过给元素添加overflow:hidden可以解决</li><li>如果元素浮动,则会脱离文档流 后面的元素会顶上去,如果不希望顶上去则给后面的元素添加clear:both</li><li><strong>当需要把纵向排列的元素改成横向排列时使用浮动定位</strong></li></ul><h2 id="JavaScript-JS"><a href="#JavaScript-JS" class="headerlink" title="JavaScript  JS"></a>JavaScript  JS</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li>html负责搭建页面结构和内容(盖房子)  CSS负责美化页面(装修) JS给页面添加动态效果和动态内容</li><li>js历史<br>  95年由网景公司(NetScape)发布LiveScipt,同年更名为JavaScript 和Java语言没关系 为了蹭热度</li><li>JS特点:<ol><li>属于脚本语言,不需要编译,由浏览器解析执行</li><li>可以嵌入到html页面中</li><li>基于面向对象, 属于弱类型语言</li><li>具有良好的交互性</li><li>安全性高,禁止访问浏览器外部的内容<h4 id="js的引入方式"><a href="#js的引入方式" class="headerlink" title="js的引入方式"></a>js的引入方式</h4></li></ol></li><li>内联:在标签的事件属性中添加js代码,当事件触发时代码执行</li><li>内部:在html页面中任意位置添加script标签,在标签内部写js代码</li><li>外部:在单独的js文件中写js代码,通过script标签的src属性引入</li></ul><h4 id="JS语法"><a href="#JS语法" class="headerlink" title="JS语法"></a>JS语法</h4><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><ul><li>JS中只有对象类型</li><li>常见的对象类型:<ol><li>数值类型: number</li><li>字符串类型: string</li><li>布尔值类型: boolean</li><li>未定义类型: undefined</li><li>自定义类型: object<h4 id="变量的声明和赋值"><a href="#变量的声明和赋值" class="headerlink" title="变量的声明和赋值"></a>变量的声明和赋值</h4></li></ol></li><li>JS属于弱类型语言</li><li>java: int x = 10;</li><li>js:  var x = 10;<pre><code>var s = &quot;abc&quot;;var b = true/false;var u;var p = new Person();p = 10;</code></pre><h4 id="常见类型介绍"><a href="#常见类型介绍" class="headerlink" title="常见类型介绍"></a>常见类型介绍</h4></li></ul><ol><li><p>数值类型:number<br> 数值类型底层全部是浮点数,在使用的过程中会自动转换整数或者小数<br> var x = 5;<br> var y = 2;<br> var z = x/y;   z=2.5</p><p> var x = 6;<br> var y = 2;<br> var z = x/y;   z=3</p><p> java : int x = 5;   int y = 2;   int z = x/y;   z=2</p></li></ol><ul><li>NaN: Not a Number 不是一个数,  判断一个变量是否是数, 通过isNaN()方法判断变量是否是数 true代表不是数 false代表是数</li></ul><ol start="2"><li>布尔值类型:boolean<br> var b = true/false;</li><li>字符串:string<br> var s1 = “abc”;<br> var s2 = ‘abc’;</li><li>未定义:undefined</li></ol><ul><li>当一个变量只声明不赋值的时候,此变量的类型为未定义<h4 id="各种数据类型之间的隐式转换"><a href="#各种数据类型之间的隐式转换" class="headerlink" title="各种数据类型之间的隐式转换"></a>各种数据类型之间的隐式转换</h4></li></ul><ol><li>数值类型</li></ol><ul><li>转字符串:   直接转    18-&gt;”18”   “abc”+18 =”abc18”</li><li>转布尔值:   0和NaN转false    其它true</li></ul><ol start="2"><li>布尔值类型</li></ol><ul><li>转字符串:   直接转    true/false-&gt; “true”/“false”  “abc”+true=”abctrue”;</li><li>转数值:       true-&gt;1    false-&gt;0      18+true</li></ul><ol start="3"><li>字符串</li></ol><ul><li>转数值:  能转直接转 “18”-&gt;18 不能转则转成NaN “abc”-&gt;NaN<pre><code>&quot;18&quot;+8 =&quot;188&quot;  加法运算会把数值转成字符串&quot;18&quot;-8 = 10    -*/把字符串转成数值&quot;abc&quot;-8 = NaN  任何数值和NaN进行任何运算结果都是NaN</code></pre></li><li>转布尔值:  空字符串转false  “”-&gt;false   其它转true</li></ul><ol start="4"><li>未定义</li></ol><ul><li>转字符串: 直接转   “abc”+undefined = “abcundefined”</li><li>转数值:  转成NaN       18+undefined = NaN</li><li>转布尔值:  false    if(undefined){alert(“xxx”)}</li></ul><ol start="5"><li>null</li></ol><ul><li><p>转字符串: 直接转   “abc”+null = “abcnull”;</p></li><li><p>转数值:  转成0    18+null = 18 ;</p></li><li><p>转布尔值: false      if(null){alert(“xxx”)}</p><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符+ - * / % ="></a>运算符+ - * / % =</h4></li><li><p>和Java大体相同</p></li><li><p>== 和 ===,==先统一两个变量的类型再比较值是否相等, ===先比较类型,如果类型相同再比较值    “66”==66     “66”===66</p></li><li><p>除法运算会自动转换整数和小数  5/2=2.5  6/2=3;</p></li><li><p>typeof x;  获取变量的类型      typeof 66 + 6 = “number6”</p><h4 id="语句-if-else-while-for-switch-cash"><a href="#语句-if-else-while-for-switch-cash" class="headerlink" title="语句  if else while for switch cash"></a>语句  if else while for switch cash</h4></li><li><p>和Java大体相同</p></li><li><p>if和while括号里面的内容 如果不是布尔值会自动隐式转换成布尔值</p></li><li><p>for循环中的 int i改成 var i , 不支持增强for循环</p><h4 id="方法声明"><a href="#方法声明" class="headerlink" title="方法声明"></a>方法声明</h4></li><li><p>java: public void 方法名(参数列表){方法体}</p></li><li><p>js:  function 方法名(参数列表){方法体}</p></li><li><p>常见的四种方法:</p><ol><li>无参无返回值</li><li>无参有返回值</li><li>有参五返回值</li><li>有参有返回值</li></ol></li><li><p>JS中有三种声明方法的方式</p><ol><li>function 方法名(参数列表){方法体}</li><li>var 方法名 = function(参数列表){方法体}</li><li>var 方法名 = new Function(“参数1”,”参数2”,”参数3”,”方法体”);</li></ol></li></ul><h4 id="和页面标签相关的方法"><a href="#和页面标签相关的方法" class="headerlink" title="和页面标签相关的方法"></a>和页面标签相关的方法</h4><ol><li>通过id获取页面中的标签<br> var d = document.getElementById(“id”);</li><li>获取和修改标签的文本内容 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d.innerText &#x3D; &quot;abc&quot;;</span><br><span class="line">d.innerText;</span><br></pre></td></tr></table></figure></li><li>获取和修改文本框的文本内容 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   i.value&#x3D;&quot;abc&quot;;</span><br><span class="line">i.value;</span><br></pre></td></tr></table></figure></li><li>获取和修改标签的html内容 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   d.innerHTML&#x3D;&quot;&lt;h1&gt;abc&lt;&#x2F;h1&gt;&quot;;</span><br><span class="line">d.innerHTML;</span><br></pre></td></tr></table></figure><h3 id="String-数组-日期对象-正则"><a href="#String-数组-日期对象-正则" class="headerlink" title="String 数组 日期对象 正则"></a>String 数组 日期对象 正则</h3><h4 id="字符串相关"><a href="#字符串相关" class="headerlink" title="字符串相关"></a>字符串相关</h4></li><li>创建字符串<br> var s1 = “abc”/‘abc’;<br> var s2 = new String(“abc”);</li><li>把字符串转成数值<br> parseInt()<br> parseFloat()<br> Number() 作用和parseFloat类似</li><li>转大小写<br> str.toUpperCase() 转大写   str.toLowerCase()转小写</li><li>获取字符串出现的位置<ul><li>str.indexOf();   //从前面找</li><li>str.lastIndexOf(); //从后面找</li></ul></li><li>截取字符串<ul><li>str.substring(start,?end);</li></ul></li><li>替换字符串<ul><li>str.replace(old,new);</li></ul></li><li>拆分字符串<ul><li>var arr = str.split(“.”);<h4 id="数学相关"><a href="#数学相关" class="headerlink" title="数学相关"></a>数学相关</h4></li></ul></li></ol><ul><li>随机数 Math.random()  获取0-1的随机小数<br>  1-100            parseInt(Math.random()<em>100)+1<br>  3-5的随机整数    0-2  parseInt(Math.random()</em>3) + 3<br>  5-9的随机整数    0-4 parseInt(Math.random()*5) + 5</li><li>四舍五入 num.toFixed(n);  n代表保留几位小数<br>  38.3456.toFixed(3)    38.346<h4 id="数组相关"><a href="#数组相关" class="headerlink" title="数组相关"></a>数组相关</h4></li></ul><ol><li><p>创建数组<br> var arr1 = [“abc”,18,true];<br> var arr2 = new Array();</p></li><li><p>往数组中添加数据<br> arr.push(“xxx”);</p></li><li><p>获取数组长度<br> arr.length;</p></li><li><p>遍历数组 和java一样</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">alert(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>数组反转<br> arr.reverse();</p></li><li><p>数组排序</p><ul><li><p>默认排序规则是以unicode编码进行排序,依次比较<br>arr.sort();<br>arr.sort(自定义排序方法);<br>//创建自定义排序方法<br>function mysort(a,b){<br>  //return a-b;//升序  b-a降序<br>  return b-a;<br>}<br>//当方法作为参数传递时不写()  只有调用时才加()<br>alert(arr.sort(mysort));</p></li><li><p>简单写法<br>arr.sort(new Function(“a”,”b”,”return a-b;”));</p><h4 id="日期相关"><a href="#日期相关" class="headerlink" title="日期相关"></a>日期相关</h4></li></ul></li></ol><ul><li>服务器时间和客户端时间</li></ul><ol><li>获取当前客户端时间<br> var d = new Date();</li><li>把字符串时间转成时间对象<br> var str = “2019/6/11 15:47:22”;<br> var d = new Date(str);</li><li>获取和设置时间戳(时间戳:距1970年1月1日 08:00:00的毫秒数)<br> d.getTime();//获取<br> d.setTime(1000);</li><li>获取时间分量<br> d.getFullYear();<br> d.getMonth();<br> d.getDate();<br> d.getDay();<br> d.getHours();<br> d.getMinutes();<br> d.getSeconds();</li><li>获取年月日  和  获取时分秒<br> d.toLocaleDateString(); 获取年月日<br> d.toLocaleTimeString(); 获取时分秒<h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4></li></ol><ul><li>正则应用场景:1. 查找内容 2. 文本校验</li><li>.:匹配任意字符 除了换行</li><li>\w:匹配任意数字 字母 下划线</li><li>\d:匹配任意数字</li><li>\s:匹配任意空白</li><li>^: 开头</li><li>$: 结尾</li><li>举例:<ol><li>以m开头   ^m</li><li>以n结尾   n$</li><li>包含两位数字    \d{2}</li><li>只有两位数字组成   ^\d{2}$</li><li>以3个数字开头    ^\d{3}<ol start="6"><li>以x开头y结尾中间5个数字   ^x\d{5}y$</li><li>以m开头n结尾中间3到5个数字 ^m\d{3,5}n$</li><li>6-10位数字 字母 下划线组成  ^\w{6,10}$</li></ol></li></ol></li></ul><ol><li>创建正则对象</li></ol><ul><li>第一种格式: /规则/模式;     模式(i:忽略大小写 g:全局查找 )<br>   var reg = /^\w{6,10}$/;</li><li>第二种格式: new RegExp(“规则”,?”模式”);   \需要转义<br>  var reg2 = new RegExp(“^\w{6,10}$”);</li></ul><ol start="2"><li>和正则相关的方法</li></ol><ul><li><p>查找内容的方法 reg.exec(str)<br>  var str = “you can you up no can no b b”;<br>  var reg = /no/g;<br>  alert(reg.exec(str));  // no<br>  alert(reg.exec(str));  // no<br>  alert(reg.exec(str));  // null</p></li><li><p>校验方法 reg.test(str)<br>  var str = “you can you up no can no b b”;<br>  var reg = /^you/i;   //添加i代表忽略大小写<br>  reg.test(str);    //返回值为false</p></li><li><p>字符串和正则相关的方法</p></li></ul><ol><li>查找内容 str.match(reg)  将查找到的内容一次性返回<br> var str = “you can you up no can no b b”;<br> var reg = /no/g;<br> var arr = str.match(reg);</li><li>查找并替换 str.replace(reg,new);<br> var str = “you can you up no can no b b”;<br> var reg = /no/g;<br> alert(str.replace(reg,”不”));<h4 id="给元素添加class属性值"><a href="#给元素添加class属性值" class="headerlink" title="给元素添加class属性值"></a>给元素添加class属性值</h4></li></ol><ul><li>元素对象.className = “xxx”;<h4 id="隐藏页面标签的两种方式"><a href="#隐藏页面标签的两种方式" class="headerlink" title="隐藏页面标签的两种方式"></a>隐藏页面标签的两种方式</h4></li></ul><ol><li>display:none 元素隐藏并脱离文档流, 改回原来的值则显示</li><li>visibility:hidden(隐藏)/visible(显示)  隐藏元素不脱离文档流</li></ol><h3 id="自定义对象-了解"><a href="#自定义对象-了解" class="headerlink" title="自定义对象(了解)"></a>自定义对象(了解)</h3><ul><li><p>第一种方式:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">      <span class="function">function <span class="title">Person</span><span class="params">(name,age)</span></span>&#123;</span><br><span class="line"><span class="comment">//给对象添加属性</span></span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line"><span class="keyword">this</span>.age=age;</span><br><span class="line"><span class="comment">//给对象添加方法</span></span><br><span class="line"><span class="keyword">this</span>.run = function()&#123;</span><br><span class="line">alert(<span class="keyword">this</span>.name+<span class="string">":"</span>+<span class="keyword">this</span>.age);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实例化对象</span></span><br><span class="line"><span class="comment">//var p = new Person("关羽",42);</span></span><br><span class="line"><span class="comment">//p.run();</span></span><br></pre></td></tr></table></figure></li><li><p>第二种:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p2 = &#123;</span><br><span class="line"><span class="comment">/* 以键值对的形式添加属性和方法 */</span></span><br><span class="line"><span class="string">"name"</span>:<span class="string">"刘备"</span>,</span><br><span class="line"><span class="string">"age"</span>:<span class="number">43</span>,</span><br><span class="line"><span class="string">"run"</span>:function()&#123;</span><br><span class="line">alert(<span class="keyword">this</span>.name+<span class="string">":"</span>+<span class="keyword">this</span>.age);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p2.run();</span><br></pre></td></tr></table></figure><h3 id="DHTML"><a href="#DHTML" class="headerlink" title="DHTML"></a>DHTML</h3></li><li><p>简介: Dynamic(动态)HTML=html+css+js</p></li><li><p>对象分类:</p><ol><li>JavaScript内置对象:包括 string number boolean array</li><li>BOM:Browser(浏览器) Object Modle,包含和浏览器相关的各种对象</li><li>DOM:Document(文档) Object Model,包含和页面相关的各种对象</li></ol></li></ul><h3 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h3><ul><li>window对象, 该对象里面属性和方法称为全局属性和全局方法,访问时可以省略window.</li><li>window对象中常见的方法:<ol><li>parseInt/Flaot()</li><li>alert()  //弹出提示框</li><li>confirm() //弹出确认框</li><li>prompt() //弹出文本框</li><li>isNaN()  判断是否是数</li></ol></li><li>window中常见的属性<ol><li>location  位置<br> 获得和修改浏览器的访问地址:<pre><code>location.href //获取location.href=&quot;http://tmooc.cn&quot; //修改</code></pre> location.reload(); 重新加载(刷新)</li><li>history  历史  当前窗口的历史页面<br> history.length   页面数量<br> history.back()  返回上一页面<br> history.forward() 前往下一页面<br> history.go(n)  n正值则前进 负值后退  0刷新</li><li>screen 屏幕<br> screen.width/height  获得屏幕的分辨率<br> screen.availWidth/availHeight  获取屏幕可用分辨率</li><li>navigator 导航/帮助<br> navigator.userAgent 获取浏览器的版本信息</li></ol></li><li>window中相关的事件<ol><li>onclick 窗口点击事件</li><li>onload 页面加载完成事件   ****</li><li>onfocus 页面获取焦点事件</li><li>onblur 页面失去焦点事件</li></ol></li></ul><h4 id="eval-方法"><a href="#eval-方法" class="headerlink" title="eval()方法"></a>eval()方法</h4><ul><li>可以将字符串以js代码的形式执行<br>“2+3*5-5”</li></ul><p>通过js代码给标签添加css样式<br>    标签对象.style.样式名=”样式值”</p><h3 id="通过标签名获取元素们"><a href="#通过标签名获取元素们" class="headerlink" title="通过标签名获取元素们"></a>通过标签名获取元素们</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = document.getElementsByTagName(<span class="string">"标签名"</span>);</span><br></pre></td></tr></table></figure><h3 id="Low版轮播图步骤"><a href="#Low版轮播图步骤" class="headerlink" title="Low版轮播图步骤"></a>Low版轮播图步骤</h3><ol><li>页面中添加div在div里面添加三个img</li><li>通过样式让div和img设置相同的宽高200*150</li><li>让所有图片隐藏(脱离文档流的隐藏)</li><li>在页面加载完成的时候获取第一张图片 并让其显示</li><li>开启定时器准备一个递增的全局变量x然后在定时器的方法中让其对3取余数</li><li>获取所有的图片数组,遍历数组,遍历时判断如果i等于第5步取到的余数时让当前遍历的图片显示 其它的隐藏<h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3></li></ol><ul><li>开启   var timer = setInterval(方法,时间间隔);</li><li>停止   clearInterval(timer);<h3 id="只执行一次的定时器"><a href="#只执行一次的定时器" class="headerlink" title="只执行一次的定时器"></a>只执行一次的定时器</h3></li><li>setTimeout(方法,时间间隔);</li></ul><h3 id="DOM-Document-Object-Model文档对象模型"><a href="#DOM-Document-Object-Model文档对象模型" class="headerlink" title="DOM Document Object Model文档对象模型"></a>DOM Document Object Model文档对象模型</h3><ul><li>和页面相关的内容<h4 id="查找页面元素的方法"><a href="#查找页面元素的方法" class="headerlink" title="查找页面元素的方法"></a>查找页面元素的方法</h4></li></ul><ol><li>通过id查找<br> document.getElementById()</li><li>通过标签名查找<br> document.getElementsByTagName()</li><li>通过标签的name属性查找<br> document.getElementsByName()</li><li>通过标签的class属性查找<br> document.getElementsByClassName();</li><li>获取页面的body元素<br> document.body<h4 id="创建新元素"><a href="#创建新元素" class="headerlink" title="创建新元素"></a>创建新元素</h4></li></ol><ul><li>var d = document.createElement(“div”);<br>  d.innerText=”abc”;<h4 id="添加到页面"><a href="#添加到页面" class="headerlink" title="添加到页面"></a>添加到页面</h4></li><li>父元素.appendChild(新元素);<br> document.body.appendChild(d);<h4 id="插入元素"><a href="#插入元素" class="headerlink" title="插入元素"></a>插入元素</h4></li><li>父元素.insertBefore(新元素,弟弟元素);<h4 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h4></li><li>父元素.removeChild(被删除的元素);</li></ul><h3 id="代码介绍"><a href="#代码介绍" class="headerlink" title="代码介绍"></a>代码介绍</h3><ol><li>定时器移动图片<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line">        onclick = function () &#123;</span><br><span class="line">            x += <span class="number">10</span>;</span><br><span class="line">            i1.style.marginLeft = x + <span class="string">"px"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*定时器*/</span></span><br><span class="line">        setInterval(function () &#123;</span><br><span class="line">            x += <span class="number">10</span>;</span><br><span class="line">            i1.style.marginLeft = x + <span class="string">"px"</span>;</span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img src=<span class="string">"../imgs/2.gif"</span> id=<span class="string">"i1"</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>添加数字练习<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">        setInterval(function () &#123;</span><br><span class="line">            i++;</span><br><span class="line">            d1.innerHTML += <span class="string">"&lt;div&gt;"</span>+i+<span class="string">"&lt;/div&gt;"</span>;</span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id="d1"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>循环添加三张图片<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        img&#123;</span><br><span class="line">            width: <span class="number">100</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">var</span> imgs = [<span class="string">"a.jpg"</span>,<span class="string">"b.jpg"</span>,<span class="string">"k.jpg"</span>];</span><br><span class="line">        <span class="comment">//如果出现不断往返数值 要准备一个不断递增的数，对此取余数</span></span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">        setInterval(function () &#123;</span><br><span class="line">            <span class="keyword">var</span> name = i++%imgs.length;</span><br><span class="line">            i1.innerHTML += <span class="string">"&lt;img src='../imgs/"</span>+imgs[name]+<span class="string">"'&gt;"</span></span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id="i1"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>low版轮播图<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        div,img&#123;</span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">150</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        img&#123;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="comment">/*页面加载完成事件*/</span></span><br><span class="line">        onload = function () &#123;</span><br><span class="line">            <span class="keyword">var</span> img = document.getElementsByTagName(<span class="string">"img"</span>)[<span class="number">0</span>];</span><br><span class="line">            /!*让图片显示*!/</span><br><span class="line">            img.style.display = <span class="string">"inline-block"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> index = <span class="number">0</span>;</span><br><span class="line">        setInterval(function () &#123;</span><br><span class="line">            <span class="keyword">var</span> imgs = document.getElementsByTagName(<span class="string">"img"</span>);</span><br><span class="line">            <span class="keyword">var</span> img = ++index % imgs.length;</span><br><span class="line">            <span class="comment">//得到数组遍历</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; imgs.length;i++)&#123;</span><br><span class="line">                imgs[i].style.display = i == img?<span class="string">"inline-block"</span>:<span class="string">"none"</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;,<span class="number">1000</span>)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;img src=<span class="string">"../imgs/a.jpg"</span>&gt;</span><br><span class="line">    &lt;img src=<span class="string">"../imgs/b.jpg"</span>&gt;</span><br><span class="line">    &lt;img src=<span class="string">"../imgs/k.jpg"</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>高级版轮播图<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        div,img&#123;</span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">150</span>px;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line">        img&#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">        &#125;</span><br><span class="line">        div&#123;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        onload = function () &#123;</span><br><span class="line">            <span class="keyword">var</span> arr = document.getElementsByTagName(<span class="string">"img"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                arr[i].style.left = i * <span class="number">200</span> + <span class="string">"px"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//每隔2秒移动一次图片</span></span><br><span class="line">        <span class="keyword">var</span> timer = setInterval(change,<span class="number">2000</span>);</span><br><span class="line">        <span class="comment">//改变图片的方法</span></span><br><span class="line">        <span class="function">function <span class="title">change</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">/*开启定时器移动图片*/</span></span><br><span class="line">            <span class="keyword">var</span> moveTimer = setInterval(function () &#123;</span><br><span class="line">                <span class="keyword">var</span> arr = document.getElementsByTagName(<span class="string">"img"</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                    <span class="comment">//取出原来的left值</span></span><br><span class="line">                    <span class="keyword">var</span> oldLeft = parseInt(arr[i].style.left);</span><br><span class="line">                    oldLeft -= <span class="number">2</span>;</span><br><span class="line">                    <span class="comment">//离开页面后把图片放到两张图片的后面</span></span><br><span class="line">                    <span class="keyword">if</span> (oldLeft &lt;= -<span class="number">200</span>) &#123;</span><br><span class="line">                        oldLeft = <span class="number">400</span>;</span><br><span class="line">                        <span class="comment">//让定时器停止</span></span><br><span class="line">                        clearInterval(moveTimer);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//把值再赋值回去</span></span><br><span class="line">                    arr[i].style.left = oldLeft + <span class="string">"px"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,<span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">function <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            clearInterval(timer);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">function <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">//停止之前的定时器</span></span><br><span class="line">            stop();</span><br><span class="line">            timer = setInterval(change,<span class="number">2000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//失去焦点事件</span></span><br><span class="line">        onblur = function () &#123;</span><br><span class="line">            stop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取焦点事件</span></span><br><span class="line">        onfocus = function () &#123;</span><br><span class="line">            start();</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div onmouseover=<span class="string">"stop()"</span> onmouseout=<span class="string">"start()"</span>&gt;</span><br><span class="line">    &lt;img src=<span class="string">"../imgs/a.jpg"</span>&gt;</span><br><span class="line">    &lt;img src=<span class="string">"../imgs/b.jpg"</span>&gt;</span><br><span class="line">    &lt;img src=<span class="string">"../imgs/k.jpg"</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>倒计时练习<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="comment">//只执行一次的定时器</span></span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">            alert(<span class="string">"啦啦啦"</span>)</span><br><span class="line">        &#125;,<span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">        onload = function()&#123;</span><br><span class="line">            <span class="comment">//获取系统时间</span></span><br><span class="line">            <span class="keyword">var</span> d = <span class="keyword">new</span> Date();</span><br><span class="line">            myh3.innerText = d.toLocaleTimeString();</span><br><span class="line">        &#125;</span><br><span class="line">        setInterval(function () &#123;</span><br><span class="line">            <span class="comment">//获取系统时间</span></span><br><span class="line">            <span class="keyword">var</span> d = <span class="keyword">new</span> Date();</span><br><span class="line">            myh3.innerText = d.toLocaleTimeString();</span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line">        <span class="function">function <span class="title">startfn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            b1.disabled = <span class="keyword">true</span>; <span class="comment">//让按钮失效</span></span><br><span class="line">            <span class="keyword">var</span> total = i1.value * <span class="number">3600</span> + i2.value * <span class="number">60</span> + i3.value*<span class="number">1</span>;</span><br><span class="line">            showTime(total)</span><br><span class="line">            <span class="keyword">var</span> timer = setInterval(function () &#123;</span><br><span class="line">                total--;</span><br><span class="line">                showTime(total);</span><br><span class="line">                <span class="keyword">if</span> (total &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="comment">//时间到停止</span></span><br><span class="line">                    clearInterval(timer);</span><br><span class="line">                    myh2.innerText = <span class="string">"时间到！"</span></span><br><span class="line">                    <span class="comment">//恢复按钮</span></span><br><span class="line">                    b1.disabled = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">function <span class="title">showTime</span><span class="params">(total)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//转回时分秒</span></span><br><span class="line">            <span class="keyword">var</span> h = parseInt(total/<span class="number">3600</span>);</span><br><span class="line">            <span class="keyword">var</span> m = parseInt(total%<span class="number">3600</span>/<span class="number">60</span>);</span><br><span class="line">            <span class="keyword">var</span> s = total%<span class="number">60</span>;</span><br><span class="line">            h = h &lt; <span class="number">10</span>?<span class="string">"0"</span>+h:h;</span><br><span class="line">            m = m &lt; <span class="number">10</span>?<span class="string">"0"</span>+m:m;</span><br><span class="line">            s = s &lt; <span class="number">10</span>?<span class="string">"0"</span>+s:s;</span><br><span class="line">            myh2.innerText = h + <span class="string">":"</span> + m + <span class="string">":"</span> + s;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3 id="myh3"&gt;&lt;/h3&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> id=<span class="string">"i1"</span> placeholder=<span class="string">"小时"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> id=<span class="string">"i2"</span> placeholder=<span class="string">"分钟"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> id=<span class="string">"i3"</span> placeholder=<span class="string">"秒"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"开始"</span> onclick=<span class="string">"startfn()"</span> id=<span class="string">"b1"</span>&gt;</span><br><span class="line">&lt;h2 id="myh2"&gt;&lt;/h2&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>dom相关练习<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">            <span class="keyword">var</span> arr = document.getElementsByClassName(<span class="string">"c1"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">                arr[i].style.color = <span class="string">"red"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="number">3000</span>);</span><br><span class="line">        onclick = function () &#123;</span><br><span class="line">            <span class="keyword">var</span> d = document.createElement(<span class="string">"div"</span>);</span><br><span class="line">            d.innerText = <span class="string">"哥哥"</span>;</span><br><span class="line">            d.style.color = <span class="string">"red"</span>;</span><br><span class="line">            document.body.insertBefore(d,d2);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">性别：&lt;input type=<span class="string">"radio"</span> name=<span class="string">"gend er"</span> value=<span class="string">"nan"</span>&gt;男</span><br><span class="line">    &lt;input type=<span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"nv"</span>&gt;女</span><br><span class="line">&lt;div&gt;div1&lt;/div&gt;</span><br><span class="line">&lt;div id="d2"&gt;div2&lt;/div&gt;</span><br><span class="line">&lt;div class="c1"&gt;div3&lt;/div&gt;</span><br><span class="line">&lt;span&gt;s1&lt;/span&gt;</span><br><span class="line">&lt;span&gt;s2&lt;/span&gt;</span><br><span class="line">&lt;span class="c1"&gt;s3&lt;/span&gt;</span><br><span class="line">&lt;h3 class="c1"&gt;h3&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;h4&lt;/h4&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>北上广练习<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="function">function <span class="title">f</span><span class="params">(value)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> l = document.createElement(<span class="string">"li"</span>);</span><br><span class="line">            l.innerText = i1.value;</span><br><span class="line">            <span class="keyword">switch</span> (value) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"append"</span>:</span><br><span class="line">                    myul.appendChild(l);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"insert"</span>:</span><br><span class="line">                    myul.insertBefore(l, sh);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"delete"</span>:</span><br><span class="line">                    myul.removeChild(sh);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> id=<span class="string">"i1"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"添加"</span> onclick=<span class="string">"f('append')"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"插入"</span> onclick=<span class="string">"f('insert')"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"删除"</span> onclick=<span class="string">"f('delete')"</span>&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;ul id=<span class="string">"myul"</span>&gt;</span><br><span class="line">    &lt;li&gt;北京&lt;/li&gt;</span><br><span class="line">    &lt;li id="sh"&gt;上海&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;广州&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="高级版轮播图步骤"><a href="#高级版轮播图步骤" class="headerlink" title="高级版轮播图步骤:"></a>高级版轮播图步骤:</h4></li><li>搭建页面，通过css给图片和div设置相同的宽高</li><li>修改图片的定位为绝对定位，并且在上级div里添加相对定位</li><li>在页面加载完成的时候得到所有的图片数组，遍历数组，<br>让数组里面图片的left值为i*200</li><li>创建1秒执行100次的定时器 在定时器里面获取所有图片数组，<br>遍历数组，得到当前遍历图片的left值 让其-=2 把新的值再次给到图片</li><li>在移动图片时 如果left值&lt;=-200时 让left值=400</li><li>让上级div超出范围不显示</li><li>让定时器通过一个moveTimer记录 ，在判断left值&lt;=-200时让定时器停止</li><li>把移动一张 图片定时器的所有代码封装到一个方法中，<br>再开启另外一个定时器，每隔2秒调用次方法</li><li>给div添加鼠标悬停事件悬停时调用stop方法 方法中停止2秒执行的定时器</li><li>div添加鼠标移出事件 调用start方法 方法中再次开启2秒执行的定时器。</li><li>当页面失去焦点时调用 stop方法 当页面获取焦点时调用 start方法</li><li>在start方法中调用stop方法 为了避免重复开启定时器<h3 id="事件相关"><a href="#事件相关" class="headerlink" title="事件相关"></a>事件相关</h3>onclick onmouseover onmouseout onload onfocus onblur onsubmit onchange onresize</li></ol><ul><li>事件:事件就是一些特定的时间点 ,事件分为鼠标事件 键盘事件 状态改变事件<h4 id="事件分类"><a href="#事件分类" class="headerlink" title="事件分类"></a>事件分类</h4></li><li>鼠标事件: 点击onclick 鼠标移入onmouseover 鼠标移出onmouseout<br>鼠标按下onmousedown 鼠标抬起onmouseup 鼠标移动onmousemove</li><li>键盘事件: 键盘按下事件onkeydown  键盘抬起事件onkeyup</li><li>状态改变事件: 页面加载完成onload  表单提交onsubmit 获取焦点onfocus<br>失去焦点onblur 窗口尺寸改变onresize 值改变onchange<h4 id="event事件对象"><a href="#event事件对象" class="headerlink" title="event事件对象"></a>event事件对象</h4></li><li>该对象保存着事件相关的信息</li></ul><ol><li>鼠标事件中保存着鼠标的坐标 event.clientX/clientY</li><li>键盘事件中保存着按键的编码 event.keyCode  String.fromCharCode(65)</li><li>在任何事件中都可以获取事件源对象<br> var obj = event.target || event.srcElement;</li></ol><h4 id="事件的绑定"><a href="#事件的绑定" class="headerlink" title="事件的绑定"></a>事件的绑定</h4><ol><li>在标签内部添加事件属性<br> this代表window对象, 没啥用</li><li>通过js代码给标签对象添加事件(动态绑定)<br> this代表事件源<h4 id="事件的传递-事件冒泡儿"><a href="#事件的传递-事件冒泡儿" class="headerlink" title="事件的传递(事件冒泡儿)"></a>事件的传递(事件冒泡儿)</h4></li></ol><ul><li>如果在某一个范围有多个事件需要响应,响应顺序从底层元素往上级元素传递<br>(类似于气泡从下往上,所以称为事件冒泡儿)<br>###jQuery</li><li>jQuery框架:是一个通过js语言写的框架,对原生js语言进行封装,可以上程序员写的更少但实现的更多</li><li>优点:</li></ul><ol><li>可以向css的选择器一样获取页面中的元素<br> js: var d = document.getElementById(“id”);<br> jq:    $(“#id”)</li><li>可以批量给元素添加样式<br> js:var arr = document.getElementsByTagName(“div”);<pre><code>for(var i=0;i&lt;arr.length;i++){    arr[i].style.color=&quot;red&quot;;}</code></pre> jq: $(“div”).css(“color”,”red”);</li><li>可以解决部分浏览器的兼容性问题</li></ol><h3 id="引入jQuery"><a href="#引入jQuery" class="headerlink" title="引入jQuery"></a>引入jQuery</h3><ul><li>和引入一个普通的js文件一样<h4 id="JS对象和JQ对象之间的互相转换"><a href="#JS对象和JQ对象之间的互相转换" class="headerlink" title="JS对象和JQ对象之间的互相转换"></a>JS对象和JQ对象之间的互相转换</h4></li></ul><ol><li>js转jq<br> var jq = $(js);</li><li>jq转js<br> var js = jq[0];<h4 id="选择器-1"><a href="#选择器-1" class="headerlink" title="选择器"></a>选择器</h4></li><li>基础选择器<br>  和css的用法一样</li></ol><ul><li>标签名选择器    $(“div”)</li><li>id选择器   $(“#id”)</li><li>class选择器  $(“.class”)</li><li>分组选择器   $(“div,#id,.class”)</li><li>任意元素选择器 $(“*”)</li></ul><ol start="2"><li>层级选择器</li></ol><ul><li>$(“div span”) 匹配div里面所有的span</li><li>$(“div&gt;span”) 匹配div里面所有的span子元素</li><li>$(“div+span”) 匹配div的弟弟元素span</li><li>$(“div~span”) 匹配div的弟弟们span</li><li>层级方法:<ol><li>$(“#abc”).siblings()  获取id为abc元素的所有兄弟元素<br> $(“#abc”).siblings(“div”) 获取id为abc元素的所有div兄弟元素</li><li>.prev() 匹配元素的哥哥元素</li><li>.prevAll() 匹配元素的哥哥们元素</li><li>.next() 匹配元素的弟弟元素</li><li>.nextAll() 匹配元素的弟弟们元素</li></ol></li></ul><ol start="3"><li>过滤选择器</li></ol><ul><li>$(“div:first”) 匹配所有div中的第一个</li><li>$(“div:last”) 匹配所有div中的最后一个</li><li>$(“div:even”) 匹配所有div中下标为偶数的元素</li><li>$(“div:odd”) 匹配所有div中下标为奇数的元素</li><li>$(“div:lt(n)”) 匹配所有div中下标小于n的元素</li><li>$(“div:gt(n)”) 匹配所有div中下标大于n的元素</li><li>$(“div:eq(n)”) 匹配所有div中下标等于n的元素</li><li>$(“div:not(.abc)”) 匹配所有div中class值不等于abc的元素</li></ul><ol start="4"><li>内容选择器</li></ol><ul><li>$(“div:has(p)”) 匹配所有包含p子元素的div</li><li>$(“div:empty”)  匹配所有空的div</li><li>$(“div:parent”) 匹配非空的div</li><li>$(“div:contains(‘xxx’)”)  匹配包含xxx文本的div</li></ul><ol start="5"><li>可见选择器</li></ol><ul><li>$(“div:hidden”) 匹配所有隐藏的div</li><li>$(“div:visible”) 匹配所有显示的div</li><li>和隐藏显示相关的方法<ol><li>$(“#abc”).show(); 显示</li><li>$(“#abc”).hide(); 隐藏</li><li>$(“#abc”).toggle(); 隐藏显示切换</li></ol></li></ul><ol start="6"><li>属性选择器</li></ol><ul><li>$(“div[id]”) 匹配有id属性的所有div</li><li>$(“div[id=’xxx’]”) 匹配id值为xxx的所有div</li><li>$(“div[id!=’xxx’]”) 匹配id值不为xxx的所有div</li></ul><ol start="7"><li>子元素选择器</li></ol><ul><li>$(“div:first-child”) 是第一个子元素并且是div</li><li>$(“div:last-child”) 是最后一个子元素并且是div</li><li>$(“div:nth-child(n)”) 是第n个子元素并且是div</li></ul><ol start="8"><li>表单选择器</li></ol><ul><li>$(“:input”) 匹配表单中的每一个控件</li><li>$(“:password”) 匹配表单中的所有密码框</li><li>$(“:radio”) 匹配所有单选</li><li>$(“:checkbox”) 匹配所有的多选</li><li>$(“:checked”) 匹配所有选中的单选/多选和下拉选</li><li>$(“input:checked”) 匹配所有选中的单选和多选</li><li>$(“:selected”) 匹配所有选中的下拉选</li></ul><h4 id="创建和添加元素"><a href="#创建和添加元素" class="headerlink" title="创建和添加元素"></a>创建和添加元素</h4><ol><li>创建元素<br> js:var d = document.createElement(“div”);<br> jq: var d = $(“<div id='xxx'>xxxxx</div>“);</li><li>添加元素<br> js: 父元素.appendChild(新元素)<br> jq: 父元素.append(新元素); //添加到最后面<pre><code>父元素.prepend(新元素); //添加到最前面</code></pre></li><li>插入元素<br> js: 父元素.insertBefore(新元素,弟弟);<br> jq: 弟弟.before(新元素);<pre><code>哥哥.after(新元素);</code></pre></li><li>删除元素<br> js: 父元素.removeChild(被删除的元素);<br> jq: 被删除的元素.remove();</li></ol><h4 id="获取和修改元素的文本内容"><a href="#获取和修改元素的文本内容" class="headerlink" title="获取和修改元素的文本内容"></a>获取和修改元素的文本内容</h4><pre><code>元素对象.text()  //获取元素对象.text(&quot;xxx&quot;)  //修改</code></pre><h4 id="获取和修改元素的html内容"><a href="#获取和修改元素的html内容" class="headerlink" title="获取和修改元素的html内容"></a>获取和修改元素的html内容</h4><pre><code>元素对象.html()  //获取元素对象.html(&quot;&lt;h1&gt;xxx&lt;/h1&gt;&quot;) //修改</code></pre><h4 id="获取和修改元素的样式"><a href="#获取和修改元素的样式" class="headerlink" title="获取和修改元素的样式"></a>获取和修改元素的样式</h4><pre><code>元素对象.css(&quot;color&quot;); //获取样式的值元素对象.css(&quot;color&quot;,&quot;red&quot;); //赋值元素对象.css({&quot;xxx&quot;:&quot;xx&quot;,&quot;xxx&quot;:&quot;xx&quot;}) //批量赋值</code></pre><h4 id="获取和修改元素的属性"><a href="#获取和修改元素的属性" class="headerlink" title="获取和修改元素的属性"></a>获取和修改元素的属性</h4><pre><code>元素对象.attr(&quot;属性名&quot;); //获取元素对象.attr(&quot;属性名&quot;,&quot;值&quot;); //赋值</code></pre><h4 id="获取元素的子元素们"><a href="#获取元素的子元素们" class="headerlink" title="获取元素的子元素们"></a>获取元素的子元素们</h4><pre><code>元素对象.children()</code></pre><h4 id="获取元素的父元素"><a href="#获取元素的父元素" class="headerlink" title="获取元素的父元素"></a>获取元素的父元素</h4><pre><code>元素对象.parent();</code></pre><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><ol><li>购物车<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        h3 &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        table &#123;</span><br><span class="line">            width: <span class="number">60</span>%;</span><br><span class="line">            margin: <span class="number">0</span> auto;</span><br><span class="line">            border: <span class="number">1</span>px solid red;</span><br><span class="line">            <span class="comment">/*将两条线合成一条线*/</span></span><br><span class="line">            border-collapse: collapse;</span><br><span class="line">        &#125;</span><br><span class="line">        td, th &#123;</span><br><span class="line">            border: <span class="number">1</span>px solid red;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="../js/jquery-1.4.2.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        $(function () &#123;</span><br><span class="line">            $(<span class="string">"input"</span>).click(function () &#123;</span><br><span class="line">                <span class="comment">//创建tr 和 5 个td</span></span><br><span class="line">                <span class="keyword">var</span> tr = $(<span class="string">"&lt;tr&gt;&lt;/tr&gt;"</span>);</span><br><span class="line">                <span class="keyword">var</span> nametd = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>);</span><br><span class="line">                <span class="keyword">var</span> pricetd = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>);</span><br><span class="line">                <span class="keyword">var</span> numtd = $(<span class="string">"&lt;td&gt;&lt;input type='button' value='-' onclick='numfn(-1)' style='width: 20px;height: 20px;'&gt;"</span> +</span><br><span class="line">                    <span class="string">"&lt;span&gt;1&lt;/span&gt;"</span> +</span><br><span class="line">                    <span class="string">"&lt;input type='button' value='+' onclick='numfn(1)' style='width: 20px;height: 20px;'&gt;&lt;/td&gt;"</span>);</span><br><span class="line">                <span class="keyword">var</span> moneytd = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>);</span><br><span class="line">                <span class="keyword">var</span> deltd = $(<span class="string">"&lt;td&gt;&lt;input type='button' value='删除'&gt;&lt;/td&gt;"</span>);</span><br><span class="line">                <span class="comment">//给删除按钮添加点击事件</span></span><br><span class="line">                deltd.children().click(function () &#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).parent().parent().remove();</span><br><span class="line">                    <span class="comment">//计算总价</span></span><br><span class="line">                    clafn();</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">//通过按钮找到上级td再得到所有兄弟td</span></span><br><span class="line">                <span class="keyword">var</span> name = $(<span class="keyword">this</span>).parent().siblings().eq(<span class="number">0</span>).text();</span><br><span class="line">                <span class="keyword">var</span> price = $(<span class="keyword">this</span>).parent().siblings().eq(<span class="number">1</span>).text();</span><br><span class="line">                nametd.text(name);</span><br><span class="line">                pricetd.text(price);</span><br><span class="line">                moneytd.text(price);</span><br><span class="line">                <span class="comment">//把td装进tr</span></span><br><span class="line">                tr.append(nametd);</span><br><span class="line">                tr.append(pricetd);</span><br><span class="line">                tr.append(numtd);</span><br><span class="line">                tr.append(moneytd);</span><br><span class="line">                tr.append(deltd);</span><br><span class="line">                <span class="comment">//把tr装进table</span></span><br><span class="line">                $(<span class="string">"tr:last"</span>).before(tr);</span><br><span class="line">                <span class="comment">//计算总价</span></span><br><span class="line">                clafn();</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//加减按钮的方法</span></span><br><span class="line">        <span class="function">function <span class="title">numfn</span><span class="params">(x)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//得到原来的数值</span></span><br><span class="line">            <span class="keyword">var</span> obj = event.target || event.srcElement;</span><br><span class="line">            <span class="comment">//通过按钮得到兄弟span里面的文本</span></span><br><span class="line">            <span class="keyword">var</span> count = parseInt($(obj).siblings(<span class="string">"span"</span>).text());</span><br><span class="line">            <span class="comment">//计算结果，并返回</span></span><br><span class="line">            count += x;</span><br><span class="line">            <span class="keyword">if</span> (count &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                count = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $(obj).siblings(<span class="string">"span"</span>).text(count);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//得到商品单价</span></span><br><span class="line">            <span class="keyword">var</span> price = $(obj).parent().prev().text();</span><br><span class="line">            <span class="comment">//将计算后的值给到金额</span></span><br><span class="line">            $(obj).parent().next().text(count * price);</span><br><span class="line">            <span class="comment">//计算总价</span></span><br><span class="line">            clafn();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算总价方法</span></span><br><span class="line">        <span class="function">function <span class="title">clafn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> total = <span class="number">0</span>;</span><br><span class="line">            $(<span class="string">"table:last tr"</span>).each(function () &#123;</span><br><span class="line">                <span class="comment">//得到每一行里面的第四个孩子td</span></span><br><span class="line">                <span class="keyword">var</span> money = parseInt($(<span class="keyword">this</span>).children().eq(<span class="number">3</span>).text());</span><br><span class="line">                <span class="keyword">if</span> (!isNaN(money))&#123;</span><br><span class="line">                    total += money;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            $(<span class="string">"td:last"</span>).text(<span class="string">"总价："</span>+total+<span class="string">"元"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;特价商品&lt;/h3&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;商品名称&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;单价&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;库存&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;好评率&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;水杯&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;25&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;100&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;90%&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type="button" value="加入购物车"&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;鼠标&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;50&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;200&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;80%&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type="button" value="加入购物车"&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;键盘&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;100&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;10&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;99%&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type="button" value="加入购物车"&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;购物车&lt;/h3&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;商品名称&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;单价&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;数量&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;金额&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td colspan="5"&gt;总价：0元&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="jQuery事件相关"><a href="#jQuery事件相关" class="headerlink" title="jQuery事件相关"></a>jQuery事件相关</h4></li><li>常见事件</li></ol><ul><li>鼠标事件: 点击事件 click 鼠标移入 mouseover 鼠标移出mouseout 鼠标按下mousedown 鼠标抬起mouseup 鼠标移动mousemove</li><li>键盘事件: 键盘按下 keydown  键盘抬起 keyup</li><li>状态改变事件: 页面加载完成 $(function(){xxxx}) 值改变change 表单提交submit  获取焦点focus  失去焦点blur 窗口尺寸改变resize</li></ul><ol start="2"><li>事件模拟<br> 元素.trigger(“事件名称”);</li><li>鼠标移入移出事件合并<br> 元素.hover(function(){鼠标移入时执行},function(){鼠标移出执行});</li></ol><h4 id="动画相关"><a href="#动画相关" class="headerlink" title="动画相关"></a>动画相关</h4><p><strong>演示：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        img&#123;</span><br><span class="line">            width: <span class="number">100</span>px;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="../js/jquery-1.4.2.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        $(function () &#123;</span><br><span class="line">            $(<span class="string">"input"</span>).click(function () &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.value == <span class="string">"隐藏"</span>)&#123;</span><br><span class="line">                    $(<span class="string">"img"</span>).hide(<span class="number">3000</span>,function () &#123;</span><br><span class="line">                        alert(<span class="string">"XXX"</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.value == <span class="string">"显示"</span>)&#123;</span><br><span class="line">                    $(<span class="string">"img"</span>).show(<span class="number">3000</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.value == <span class="string">"淡出"</span>)&#123;</span><br><span class="line">                    $(<span class="string">"img"</span>).fadeOut(<span class="number">3000</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.value == <span class="string">"淡入"</span>)&#123;</span><br><span class="line">                    $(<span class="string">"img"</span>).fadeIn(<span class="number">3000</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.value == <span class="string">"上滑"</span>)&#123;</span><br><span class="line">                    $(<span class="string">"img"</span>).slideUp(<span class="number">3000</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.value == <span class="string">"下滑"</span>)&#123;</span><br><span class="line">                    $(<span class="string">"img"</span>).slideDown(<span class="number">3000</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//自定义</span></span><br><span class="line">                    $(<span class="string">"img"</span>).animate(&#123;<span class="string">"left"</span>:<span class="string">"200px"</span>&#125;,<span class="number">1000</span>)</span><br><span class="line">                    .animate(&#123;<span class="string">"top"</span>:<span class="string">"200px"</span>&#125;,<span class="number">1000</span>)</span><br><span class="line">                    .animate(&#123;<span class="string">"left"</span>:<span class="string">"0px"</span>&#125;,<span class="number">1000</span>)</span><br><span class="line">                    .animate(&#123;<span class="string">"top"</span>:<span class="string">"0px"</span>&#125;,<span class="number">1000</span>)</span><br><span class="line">                    .animate(&#123;<span class="string">"width"</span>:<span class="string">"200px"</span>&#125;,<span class="number">1000</span>)</span><br><span class="line">                    .animate(&#123;<span class="string">"width"</span>:<span class="string">"100px"</span>&#125;,<span class="number">1000</span>)</span><br><span class="line">                    .fadeOut(<span class="number">3000</span>,function () &#123;</span><br><span class="line">                        $(<span class="string">"img"</span>).remove();</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"隐藏"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"显示"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"淡出"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"淡入"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"上滑"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"下滑"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"自定义"</span>&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;img src=<span class="string">"../imgs/a.jpg"</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>下雪效果：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="../js/jquery-1.4.2.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="comment">/*1、雪花尺寸随机20-40</span></span><br><span class="line"><span class="comment">            2、雪花越小移动速度越快</span></span><br><span class="line"><span class="comment">            3. 雪花落地后一秒融化</span></span><br><span class="line"><span class="comment">            （淡出，淡出后删除）*/</span></span><br><span class="line">        setInterval(function () &#123;</span><br><span class="line">            <span class="keyword">var</span> img = $(<span class="string">"&lt;img src='snow.png'&gt;"</span>);</span><br><span class="line">            $(<span class="string">"body"</span>).append(img);</span><br><span class="line">            img.css(<span class="string">"position"</span>,<span class="string">"absolute"</span>);</span><br><span class="line">            <span class="keyword">var</span> size = parseInt(Math.random()*<span class="number">20</span>)+<span class="number">20</span>;</span><br><span class="line">            img.css(<span class="string">"width"</span>,size+<span class="string">"px"</span>);</span><br><span class="line">            <span class="keyword">var</span> w = document.body.clientWidth;</span><br><span class="line">            <span class="comment">//得到随机left值</span></span><br><span class="line">            <span class="keyword">var</span> left = parseInt(Math.random()*(w-size));</span><br><span class="line">            <span class="comment">//设置给图片</span></span><br><span class="line">            img.css(<span class="string">"left"</span>,left+<span class="string">"px"</span>);</span><br><span class="line">            <span class="comment">//让图片往下移动</span></span><br><span class="line">            <span class="keyword">var</span> h = document.body.parentElement.clientHeight;</span><br><span class="line">            img.animate(&#123;<span class="string">"top"</span>:h-size+<span class="string">"px"</span>&#125;,size*<span class="number">100</span>)</span><br><span class="line">                .fadeOut(<span class="number">1000</span>,function () &#123;</span><br><span class="line">                    img.remove();</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125;,<span class="number">10</span>)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            background-color: black;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://lifengo.github.io/2020/03/26/JavaWeb%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>用数组实现环形队列</title>
      <link>https://lifengo.github.io/2020/03/10/%E7%94%A8%E6%95%B0%E7%BB%84%E5%AE%9E%E7%8E%B0%E7%8E%AF%E5%BD%A2%E9%98%9F%E5%88%97/</link>
      <guid>https://lifengo.github.io/2020/03/10/%E7%94%A8%E6%95%B0%E7%BB%84%E5%AE%9E%E7%8E%B0%E7%8E%AF%E5%BD%A2%E9%98%9F%E5%88%97/</guid>
      <pubDate>Mon, 09 Mar 2020 16:16:09 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;通过取模的方式来实现&quot;&gt;&lt;a href=&quot;#通过取模的方式来实现&quot; class=&quot;headerlink&quot; title=&quot;通过取模的方式来实现&quot;&gt;&lt;/a&gt;通过取模的方式来实现&lt;/h2&gt;&lt;p&gt;思路如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;front 指向队列的第一个元素, 也就是说 arr[front] 就是队列的第一个元素&lt;br&gt;front 的初始值 = 0&lt;/li&gt;
&lt;li&gt;rear 指向队列的最后一个元素的后一个位置. 因为希望空出一个空间做为约定.&lt;br&gt;rear 的初始值 = 0&lt;/li&gt;
&lt;li&gt;当队列满时，条件是  (rear  + 1) % maxSize == front 【满】&lt;/li&gt;
&lt;li&gt;对队列为空的条件， rear == front 空&lt;/li&gt;
&lt;li&gt;当我们这样分析， 队列中有效的数据的个数   (rear + maxSize - front) % maxSize &lt;/li&gt;
&lt;li&gt;自行画图便于理解
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="通过取模的方式来实现"><a href="#通过取模的方式来实现" class="headerlink" title="通过取模的方式来实现"></a>通过取模的方式来实现</h2><p>思路如下:</p><ol><li>front 指向队列的第一个元素, 也就是说 arr[front] 就是队列的第一个元素<br>front 的初始值 = 0</li><li>rear 指向队列的最后一个元素的后一个位置. 因为希望空出一个空间做为约定.<br>rear 的初始值 = 0</li><li>当队列满时，条件是  (rear  + 1) % maxSize == front 【满】</li><li>对队列为空的条件， rear == front 空</li><li>当我们这样分析， 队列中有效的数据的个数   (rear + maxSize - front) % maxSize </li><li>自行画图便于理解<a id="more"></a><h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircleQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建一个环形队列</span></span><br><span class="line">        CircleArray queue = <span class="keyword">new</span> CircleArray(<span class="number">4</span>); <span class="comment">//说明设置4, 其队列的有效数据最大是3</span></span><br><span class="line">        <span class="keyword">char</span> key = <span class="string">' '</span>; <span class="comment">// 接收用户输入</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);<span class="comment">//</span></span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">// 输出一个菜单</span></span><br><span class="line">        <span class="keyword">while</span> (loop) &#123;</span><br><span class="line">            System.out.println(<span class="string">"s(show): 显示队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"e(exit): 退出程序"</span>);</span><br><span class="line">            System.out.println(<span class="string">"a(add): 添加数据到队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"g(get): 从队列取出数据"</span>);</span><br><span class="line">            System.out.println(<span class="string">"h(head): 查看队列头的数据"</span>);</span><br><span class="line">            key = scanner.next().charAt(<span class="number">0</span>);<span class="comment">// 接收一个字符</span></span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">                    queue.showQueue();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">                    System.out.println(<span class="string">"输出一个数"</span>);</span><br><span class="line">                    <span class="keyword">int</span> value = scanner.nextInt();</span><br><span class="line">                    queue.addQueue(value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'g'</span>: <span class="comment">// 取出数据</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = queue.getQueue();</span><br><span class="line">                        System.out.printf(<span class="string">"取出的数据是%d\n"</span>, res);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'h'</span>: <span class="comment">// 查看队列头的数据</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = queue.headQueue();</span><br><span class="line">                        System.out.printf(<span class="string">"队列头的数据是%d\n"</span>, res);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'e'</span>: <span class="comment">// 退出</span></span><br><span class="line">                    scanner.close();</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"程序退出~~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CircleArray</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize; <span class="comment">// 表示数组的最大容量</span></span><br><span class="line">    <span class="comment">//front 变量的含义做一个调整： front 就指向队列的第一个元素, 也就是说 arr[front] 就是队列的第一个元素</span></span><br><span class="line">    <span class="comment">//front 的初始值 = 0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> front;</span><br><span class="line">    <span class="comment">//rear 变量的含义做一个调整：rear 指向队列的最后一个元素的后一个位置. 因为希望空出一个空间做为约定.</span></span><br><span class="line">    <span class="comment">//rear 的初始值 = 0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rear; <span class="comment">// 队列尾</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] arr; <span class="comment">// 该数据用于存放数据, 模拟队列</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleArray</span><span class="params">(<span class="keyword">int</span> arrMaxSize)</span> </span>&#123;</span><br><span class="line">        maxSize = arrMaxSize;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断队列是否满</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFull</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (rear  + <span class="number">1</span>) % maxSize == front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断队列是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加数据到队列</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addQueue</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断队列是否满</span></span><br><span class="line">        <span class="keyword">if</span> (isFull()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"队列满，不能加入数据~"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//直接将数据加入</span></span><br><span class="line">        arr[rear] = n;</span><br><span class="line">        <span class="comment">//将 rear 后移, 这里必须考虑取模</span></span><br><span class="line">        rear = (rear + <span class="number">1</span>) % maxSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取队列的数据, 出队列</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断队列是否空</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="comment">// 通过抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列空，不能取数据"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 这里需要分析出 front是指向队列的第一个元素</span></span><br><span class="line">        <span class="comment">// 1. 先把 front 对应的值保留到一个临时变量</span></span><br><span class="line">        <span class="comment">// 2. 将 front 后移, 考虑取模</span></span><br><span class="line">        <span class="comment">// 3. 将临时保存的变量返回</span></span><br><span class="line">        <span class="keyword">int</span> value = arr[front];</span><br><span class="line">        front = (front + <span class="number">1</span>) % maxSize;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示队列的所有数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 遍历</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"队列空的，没有数据~~"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 思路：从front开始遍历，遍历多少个元素</span></span><br><span class="line">        <span class="comment">// 动脑筋</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = front; i &lt; front + size() ; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"arr[%d]=%d\n"</span>, i % maxSize, arr[i % maxSize]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求出当前队列有效数据的个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// rear = 2</span></span><br><span class="line">        <span class="comment">// front = 1</span></span><br><span class="line">        <span class="comment">// maxSize = 3</span></span><br><span class="line">        <span class="keyword">return</span> (rear + maxSize - front) % maxSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示队列的头数据， 注意不是取出数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">headQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列空的，没有数据~~"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr[front];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://lifengo.github.io/2020/03/10/%E7%94%A8%E6%95%B0%E7%BB%84%E5%AE%9E%E7%8E%B0%E7%8E%AF%E5%BD%A2%E9%98%9F%E5%88%97/#disqus_thread</comments>
    </item>
    
    <item>
      <title>稀疏数组基本实现</title>
      <link>https://lifengo.github.io/2020/03/09/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/</link>
      <guid>https://lifengo.github.io/2020/03/09/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/</guid>
      <pubDate>Mon, 09 Mar 2020 10:00:51 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;基本介绍&quot;&gt;&lt;a href=&quot;#基本介绍&quot; class=&quot;headerlink&quot; title=&quot;基本介绍&quot;&gt;&lt;/a&gt;&lt;strong&gt;基本介绍&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;当一个数组中大部分元素为０，或者为同一个值的数组时，可以使用稀疏数组来保存该数组。&lt;/p&gt;
&lt;h2 id=&quot;稀疏数组的处理方法是&quot;&gt;&lt;a href=&quot;#稀疏数组的处理方法是&quot; class=&quot;headerlink&quot; title=&quot;稀疏数组的处理方法是:&quot;&gt;&lt;/a&gt;&lt;strong&gt;稀疏数组的处理方法是:&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;记录数组一共有几行几列，有多少个不同的值&lt;/li&gt;
&lt;li&gt;把具有不同值的元素的行列及值记录在一个小规模的数组中，从而缩小程序的规模&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a><strong>基本介绍</strong></h2><p>当一个数组中大部分元素为０，或者为同一个值的数组时，可以使用稀疏数组来保存该数组。</p><h2 id="稀疏数组的处理方法是"><a href="#稀疏数组的处理方法是" class="headerlink" title="稀疏数组的处理方法是:"></a><strong>稀疏数组的处理方法是:</strong></h2><ul><li>记录数组一共有几行几列，有多少个不同的值</li><li>把具有不同值的元素的行列及值记录在一个小规模的数组中，从而缩小程序的规模</li></ul><a id="more"></a><p><strong>应用实例</strong></p><p>使用稀疏数组，来保留类似前面的二维数组(棋盘、地图等等)，把稀疏数组存盘，并且可以从新恢复原来的二维数组数。<br>整体思路分析<br><img src="https://img-blog.csdnimg.cn/20200302120628230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjI5MTQ1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>==扩展==：在前面的基础上，将稀疏数组保存到磁盘上，比如 map.data。恢复原来的数组时，读取map.data 进行恢复</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sparseArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.RandomAccessFile;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span> 2020/3/1 0001</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SparseArray</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        array[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>; <span class="comment">//1代表黑子</span></span><br><span class="line">        array[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>; <span class="comment">//2代表白子</span></span><br><span class="line">        <span class="comment">//打印数组</span></span><br><span class="line">        System.out.println(<span class="string">"**********原数组***********"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row :</span><br><span class="line">                array) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data :</span><br><span class="line">                    row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历非零个数</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        创建对应的稀疏数组并赋值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span>[][] sparseArray = <span class="keyword">new</span> <span class="keyword">int</span>[sum + <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        遍历二维数组，将非零的值存放到sparseArray中</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>; <span class="comment">//记录第几个非零数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    sparseArray[count][<span class="number">0</span>] = i;</span><br><span class="line">                    sparseArray[count][<span class="number">1</span>] = j;</span><br><span class="line">                    sparseArray[count][<span class="number">2</span>] = array[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  1. 先读取稀疏数组的第一行，根据第一行的数据，创建原始的二维数组，比如上面的  chessArr2 = int [11][11]</span></span><br><span class="line"><span class="comment">2. 在读取稀疏数组后几行的数据，并赋给 原始的二维数组 即可.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">        <span class="comment">//将稀疏数组转换成初始数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] array1 = <span class="keyword">new</span> <span class="keyword">int</span>[sparseArray[<span class="number">0</span>][<span class="number">0</span>]][sparseArray[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">            array1[sparseArray[i][<span class="number">0</span>]][sparseArray[i][<span class="number">1</span>]] = sparseArray[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"***********恢复后的数组*************"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row :</span><br><span class="line">                array1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data :</span><br><span class="line">                    row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将稀疏数组写入map.dat</span></span><br><span class="line">        writeSpareArr(sparseArray);</span><br><span class="line">        <span class="comment">//读map.dat并还原二维数组</span></span><br><span class="line">        readSparseArr(sparseArray);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将稀疏数组遍历并存入map.dat中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sparseArray</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeSpareArr</span><span class="params">(<span class="keyword">int</span>[][] sparseArray)</span></span>&#123;</span><br><span class="line">        String a = <span class="keyword">null</span>;</span><br><span class="line">        String b = <span class="keyword">null</span>;</span><br><span class="line">        String c = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//遍历稀疏数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">            <span class="comment">//打印稀疏数组</span></span><br><span class="line">            System.out.printf(<span class="string">"%d\t%d\t%d\t"</span>, sparseArray[i][<span class="number">0</span>], sparseArray[i][<span class="number">1</span>], sparseArray[i][<span class="number">2</span>]);</span><br><span class="line">            <span class="keyword">try</span> (RandomAccessFile raf = <span class="keyword">new</span> RandomAccessFile(<span class="string">"map.dat"</span>, <span class="string">"rw"</span>)) &#123;</span><br><span class="line">                raf.seek(i * <span class="number">60</span>); <span class="comment">//将指针移动到每一行开始位置</span></span><br><span class="line">                <span class="comment">//将数组Int类型转换成字符串类型</span></span><br><span class="line">                a = sparseArray[i][<span class="number">0</span>] + <span class="string">""</span>;</span><br><span class="line">                b = sparseArray[i][<span class="number">1</span>] + <span class="string">""</span>;</span><br><span class="line">                c = sparseArray[i][<span class="number">2</span>] + <span class="string">""</span>;</span><br><span class="line">                <span class="comment">//将字符串以UTF-8转换成字节，一个数占20个字节，便于后面取</span></span><br><span class="line">                <span class="keyword">byte</span>[] data = a.getBytes(<span class="string">"utf-8"</span>);</span><br><span class="line">                data = Arrays.copyOf(data, <span class="number">20</span>);</span><br><span class="line">                raf.write(data);</span><br><span class="line">                data = b.getBytes(<span class="string">"utf-8"</span>);</span><br><span class="line">                data = Arrays.copyOf(data, <span class="number">20</span>);</span><br><span class="line">                raf.write(data);</span><br><span class="line">                data = c.getBytes(<span class="string">"utf-8"</span>);</span><br><span class="line">                data = Arrays.copyOf(data, <span class="number">20</span>);</span><br><span class="line">                raf.write(data);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从map中读取稀疏数组并还原 初始二维数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sparseArray</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readSparseArr</span><span class="params">(<span class="keyword">int</span>[][] sparseArray)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] sparseArray1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>][]; <span class="comment">//初始化数组</span></span><br><span class="line">        <span class="keyword">try</span> (FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"map.dat"</span>)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">                <span class="comment">//读行</span></span><br><span class="line">                <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">20</span>];</span><br><span class="line">                fis.read(data);</span><br><span class="line">                <span class="keyword">int</span> row = Integer.parseInt(<span class="keyword">new</span> String(data, <span class="string">"utf-8"</span>).trim());</span><br><span class="line">                <span class="comment">//读列数</span></span><br><span class="line">                data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">20</span>];</span><br><span class="line">                fis.read(data);</span><br><span class="line">                <span class="keyword">int</span> col = Integer.parseInt(<span class="keyword">new</span> String(data, <span class="string">"utf-8"</span>).trim());</span><br><span class="line">                <span class="comment">//读值</span></span><br><span class="line">                data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">20</span>];</span><br><span class="line">                fis.read(data);</span><br><span class="line">                <span class="keyword">int</span> val = Integer.parseInt(<span class="keyword">new</span> String(data, <span class="string">"utf-8"</span>).trim());</span><br><span class="line">                <span class="comment">//因为第一行是数组行数、列数和非零个数，所以单独分支</span></span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                    sparseArray1 = <span class="keyword">new</span> <span class="keyword">int</span>[row][col];</span><br><span class="line">                    System.out.print(<span class="string">"棋子个数: "</span> + val);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                    从第二行开始，将列数，行数，值分别赋给二维数组</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    sparseArray1[row][col] = val;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">            System.out.println(<span class="string">"**********读取文件的原数组**********"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span>[] row :</span><br><span class="line">                    sparseArray1) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> data :</span><br><span class="line">                        row) &#123;</span><br><span class="line">                    System.out.printf(<span class="string">"%d\t"</span>, data);</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://lifengo.github.io/2020/03/09/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
